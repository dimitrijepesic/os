GAS LISTING /tmp/ccv69WGL.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_ZN5Riscv10popSppSpieEv
  12              	_ZN5Riscv10popSppSpieEv:
  13              	.LFB40:
  14              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 9/26/25.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/ccb.hpp"
   7:src/riscv.cpp **** #include "../h/_semaphore.hpp"
   8:src/riscv.cpp **** #include "../h/print.hpp"
   9:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
  10:src/riscv.cpp **** #include "../h/syscall_c.hpp" // Za definicije tipova kao Å¡to je sem_t
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** // Definicije kodova sistemskih poziva moraju biti usaglaÅ¡ene sa syscall_c.cpp
  13:src/riscv.cpp **** enum SyscallCode {
  14:src/riscv.cpp ****     MEM_ALLOC = 0x01,
  15:src/riscv.cpp ****     MEM_FREE = 0x02,
  16:src/riscv.cpp ****     THREAD_CREATE = 0x11,
  17:src/riscv.cpp ****     THREAD_EXIT = 0x12,
  18:src/riscv.cpp ****     THREAD_DISPATCH = 0x13,
  19:src/riscv.cpp ****     SEM_OPEN = 0x21,
  20:src/riscv.cpp ****     SEM_CLOSE = 0x22,
  21:src/riscv.cpp ****     SEM_WAIT = 0x23,
  22:src/riscv.cpp ****     SEM_SIGNAL = 0x24
  23:src/riscv.cpp **** };
  24:src/riscv.cpp **** 
  25:src/riscv.cpp **** void Riscv::popSppSpie() {
  15              		.loc 1 25 26
  16              		.cfi_startproc
  17 0000 130101FF 		addi	sp,sp,-16
  18              		.cfi_def_cfa_offset 16
  19 0004 23348100 		sd	s0,8(sp)
  20              		.cfi_offset 8, -8
  21 0008 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  26:src/riscv.cpp ****     // VraÄ‡a se na adresu saÄuvanu u sepc, menja reÅ¾im i dozvoljava prekide
  27:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  23              		.loc 1 27 5
  24              		.loc 1 27 38 is_stmt 0
  25              	 #APP
  26              	# 27 "src/riscv.cpp" 1
  28              	    __asm__ volatile("sret");
  27              		csrw sepc, ra
  28              	# 0 "" 2
  29              		.loc 1 28 5 is_stmt 1
  30              		.loc 1 28 29 is_stmt 0
GAS LISTING /tmp/ccv69WGL.s 			page 2


  31              	# 28 "src/riscv.cpp" 1
  29              	}
  32              		sret
  33              	# 0 "" 2
  34              		.loc 1 29 1
  35              	 #NO_APP
  36 0014 03348100 		ld	s0,8(sp)
  37              		.cfi_restore 8
  38              		.cfi_def_cfa 2, 16
  39 0018 13010101 		addi	sp,sp,16
  40              		.cfi_def_cfa_offset 0
  41 001c 67800000 		jr	ra
  42              		.cfi_endproc
  43              	.LFE40:
  45              		.section	.rodata.str1.8,"aMS",@progbits,1
  46              		.align	3
  47              	.LC0:
  48 0000 4E656F63 		.string	"Neocekivani prekid! scause: "
  48      656B6976 
  48      616E6920 
  48      7072656B 
  48      69642120 
  49 001d 000000   		.align	3
  50              	.LC1:
  51 0020 2C207365 		.string	", sepc: "
  51      70633A20 
  51      00
  52 0029 00000000 		.align	3
  52      000000
  53              	.LC2:
  54 0030 2C207374 		.string	", stval: "
  54      76616C3A 
  54      2000
  55 003a 00000000 		.align	3
  55      0000
  56              	.LC3:
  57 0040 0A00     		.string	"\n"
  58              		.text
  59              		.align	2
  60              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  62              	_ZN5Riscv20handleSupervisorTrapEv:
  63              	.LFB41:
  30:src/riscv.cpp **** 
  31:src/riscv.cpp **** // promeni potpis:
  32:src/riscv.cpp **** // riscv.hpp: promeni potpis na:
  33:src/riscv.cpp **** // static uint64 handleSupervisorTrap();
  34:src/riscv.cpp **** 
  35:src/riscv.cpp **** uint64 Riscv::handleSupervisorTrap() {
  64              		.loc 1 35 38 is_stmt 1
  65              		.cfi_startproc
  66              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  67              		.cfi_lsda 0x1b,.LLSDA41
  68 0020 130101FB 		addi	sp,sp,-80
  69              		.cfi_def_cfa_offset 80
  70 0024 23341104 		sd	ra,72(sp)
  71 0028 23308104 		sd	s0,64(sp)
  72 002c 233C9102 		sd	s1,56(sp)
GAS LISTING /tmp/ccv69WGL.s 			page 3


  73 0030 23382103 		sd	s2,48(sp)
  74 0034 23343103 		sd	s3,40(sp)
  75 0038 23304103 		sd	s4,32(sp)
  76              		.cfi_offset 1, -8
  77              		.cfi_offset 8, -16
  78              		.cfi_offset 9, -24
  79              		.cfi_offset 18, -32
  80              		.cfi_offset 19, -40
  81              		.cfi_offset 20, -48
  82 003c 13040105 		addi	s0,sp,80
  83              		.cfi_def_cfa 8, 0
  36:src/riscv.cpp ****     uint64 scause = r_scause();
  84              		.loc 1 36 5
  85              	.LBB43:
  86              	.LBB44:
  87              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 9/26/25.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** extern "C" void supervisorTrap();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** class Riscv
  13:src/../h/riscv.hpp **** {
  14:src/../h/riscv.hpp **** public:
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.hpp ****     static void popSppSpie();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void pushRegisters();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     static void popRegisters();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register scause
  24:src/../h/riscv.hpp ****     static uint64 r_scause();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register scause
  27:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register sepc
  30:src/../h/riscv.hpp ****     static uint64 r_sepc();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register sepc
  33:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stvec
  36:src/../h/riscv.hpp ****     static uint64 r_stvec();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stvec
  39:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     // read register stval
GAS LISTING /tmp/ccv69WGL.s 			page 4


  42:src/../h/riscv.hpp ****     static uint64 r_stval();
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     // write register stval
  45:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     enum BitMaskSip
  48:src/../h/riscv.hpp ****     {
  49:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/riscv.hpp ****     };
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // mask set register sip
  55:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask clear register sip
  58:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // read register sip
  61:src/../h/riscv.hpp ****     static uint64 r_sip();
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // write register sip
  64:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     enum BitMaskSstatus
  67:src/../h/riscv.hpp ****     {
  68:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  69:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  70:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  71:src/../h/riscv.hpp ****     };
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // mask set register sstatus
  74:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // mask clear register sstatus
  77:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // read register sstatus
  80:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // write register sstatus
  83:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     /* -------------------------------------- */
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     // čitaj sie registar
  88:src/../h/riscv.hpp ****     static uint64 r_sie();
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     // piši u sie registar
  91:src/../h/riscv.hpp ****     static void w_sie(uint64 sie);
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp ****     // mask set u sie registru
  94:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp ****     // mask clear u sie registru
  97:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  98:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccv69WGL.s 			page 5


  99:src/../h/riscv.hpp ****     enum BitMaskSie {
 100:src/../h/riscv.hpp ****         SIE_SEIE = (1 << 9), // Supervisor External Interrupt Enable
 101:src/../h/riscv.hpp ****         SIE_STIE = (1 << 5), // Supervisor Timer Interrupt Enable
 102:src/../h/riscv.hpp ****         SIE_SSIE = (1 << 1), // Supervisor Software Interrupt Enable
 103:src/../h/riscv.hpp ****     };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** private:
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     static uint64 handleSupervisorTrap();
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** };
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile scause;
  88              		.loc 2 115 5
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  89              		.loc 2 116 5
  90              		.loc 2 116 72 is_stmt 0
  91              	 #APP
  92              	# 116 "src/../h/riscv.hpp" 1
 117              	    return scause;
  93              		csrr a5, scause
  94              	# 0 "" 2
  95              	 #NO_APP
  96 0044 2330F4FC 		sd	a5,-64(s0)
  97              		.loc 2 117 5 is_stmt 1
  98              		.loc 2 117 12 is_stmt 0
  99 0048 033904FC 		ld	s2,-64(s0)
 100              	.LVL0:
 101              	.LBE44:
 102              	.LBE43:
  37:src/riscv.cpp ****     uint64 sepc   = r_sepc();
 103              		.loc 1 37 5 is_stmt 1
 104              	.LBB45:
 105              	.LBB46:
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile sepc;
 106              		.loc 2 127 5
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 107              		.loc 2 128 5
 108              		.loc 2 128 64 is_stmt 0
 109              	 #APP
 110              	# 128 "src/../h/riscv.hpp" 1
 129              	    return sepc;
 111              		csrr a5, sepc
 112              	# 0 "" 2
GAS LISTING /tmp/ccv69WGL.s 			page 6


 113              	 #NO_APP
 114 0050 233CF4FA 		sd	a5,-72(s0)
 115              		.loc 2 129 5 is_stmt 1
 116              		.loc 2 129 12 is_stmt 0
 117 0054 833484FB 		ld	s1,-72(s0)
 118              	.LVL1:
 119              	.LBE46:
 120              	.LBE45:
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     if (scause == 0x08 || scause == 0x09) { // ecall from U/S
 121              		.loc 1 39 5 is_stmt 1
 122              	.LBB47:
 123              		.loc 1 39 24 is_stmt 0
 124 0058 130789FF 		addi	a4,s2,-8
 125              		.loc 1 39 5
 126 005c 93071000 		li	a5,1
 127 0060 63F8E70A 		bleu	a4,a5,.L30
 128              	.LBE47:
  40:src/riscv.cpp ****         uint64 code, a1, a2, a3, a4;
  41:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(code));
  42:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r"(a1));
  43:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r"(a2));
  44:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r"(a3));
  45:src/riscv.cpp ****         __asm__ volatile("mv %0, a4" : "=r"(a4));
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****         switch (code) {
  48:src/riscv.cpp ****             case MEM_ALLOC: {
  49:src/riscv.cpp ****                 void* ret = MemoryAllocator::mem_alloc((size_t)a1);
  50:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
  51:src/riscv.cpp ****                 w_sepc(sepc + 4);
  52:src/riscv.cpp ****                 return 0;
  53:src/riscv.cpp ****             }
  54:src/riscv.cpp ****             case MEM_FREE: {
  55:src/riscv.cpp ****                 int ret = MemoryAllocator::mem_free((void*)a1);
  56:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
  57:src/riscv.cpp ****                 w_sepc(sepc + 4);
  58:src/riscv.cpp ****                 return 0;
  59:src/riscv.cpp ****             }
  60:src/riscv.cpp ****             case THREAD_CREATE: {
  61:src/riscv.cpp ****                 CCB** handle = (CCB**)a1;
  62:src/riscv.cpp ****                 CCB::Body start_routine = (CCB::Body)a2;
  63:src/riscv.cpp ****                 void* arg = (void*)a3;
  64:src/riscv.cpp ****                 *handle = CCB::createCoroutine(start_routine, arg);
  65:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
  66:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
  67:src/riscv.cpp ****                 w_sepc(sepc + 4);
  68:src/riscv.cpp ****                 return 0;
  69:src/riscv.cpp ****             }
  70:src/riscv.cpp ****             case THREAD_DISPATCH: {
  71:src/riscv.cpp ****                 CCB::dispatch();  // promenjen kontekst
  72:src/riscv.cpp ****                 return 1;         // ret
  73:src/riscv.cpp ****             }
  74:src/riscv.cpp ****             case THREAD_EXIT: {
  75:src/riscv.cpp ****                 CCB::running->setFinished(true);
  76:src/riscv.cpp ****                 CCB::dispatch();  // promenjen kontekst
  77:src/riscv.cpp ****                 return 1;         // ret
  78:src/riscv.cpp ****             }
GAS LISTING /tmp/ccv69WGL.s 			page 7


  79:src/riscv.cpp ****             case SEM_OPEN: {
  80:src/riscv.cpp ****                 sem_t* handle = (sem_t*)a1;
  81:src/riscv.cpp ****                 unsigned init = (unsigned)a2;
  82:src/riscv.cpp ****                 *handle = new _sem(init);
  83:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
  84:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
  85:src/riscv.cpp ****                 w_sepc(sepc + 4);
  86:src/riscv.cpp ****                 return 0;
  87:src/riscv.cpp ****             }
  88:src/riscv.cpp ****             case SEM_CLOSE: {
  89:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
  90:src/riscv.cpp ****                 if (handle) delete handle;
  91:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
  92:src/riscv.cpp ****                 w_sepc(sepc + 4);
  93:src/riscv.cpp ****                 return 0;
  94:src/riscv.cpp ****             }
  95:src/riscv.cpp ****             case SEM_WAIT: {
  96:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
  97:src/riscv.cpp ****                 int ret = handle ? handle->wait() : -1;
  98:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
  99:src/riscv.cpp ****                 w_sepc(sepc + 4);
 100:src/riscv.cpp ****                 return 0;
 101:src/riscv.cpp ****             }
 102:src/riscv.cpp ****             case SEM_SIGNAL: {
 103:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 104:src/riscv.cpp ****                 int ret = handle ? handle->signal() : -1;
 105:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 106:src/riscv.cpp ****                 w_sepc(sepc + 4);
 107:src/riscv.cpp ****                 return 0;
 108:src/riscv.cpp ****             }
 109:src/riscv.cpp ****         }
 110:src/riscv.cpp ****         // nepoznat ecall:
 111:src/riscv.cpp ****         w_sepc(sepc + 4);
 112:src/riscv.cpp ****         return 0;
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {  // timer/software interrupt
 129              		.loc 1 114 12 is_stmt 1
 130              	.LBB89:
 131              	.LBB48:
 132 0064 9307F0FF 		li	a5,-1
 133 0068 9397F703 		slli	a5,a5,63
 134 006c 93871700 		addi	a5,a5,1
 135 0070 630EF924 		beq	s2,a5,.L31
 136              	.LBB49:
 115:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 116:src/riscv.cpp ****         CCB::dispatch();   // promena konteksta
 117:src/riscv.cpp ****         return 1;          // ret
 118:src/riscv.cpp **** 
 119:src/riscv.cpp ****     } else {
 120:src/riscv.cpp ****         uint64 stval = r_stval();
 137              		.loc 1 120 9
 138              	.LBB50:
 139              	.LBB51:
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 133:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccv69WGL.s 			page 8


 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     uint64 volatile stvec;
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 141:src/../h/riscv.hpp ****     return stvec;
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     uint64 volatile stval;
 140              		.loc 2 151 5
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 141              		.loc 2 152 5
 142              		.loc 2 152 68 is_stmt 0
 143              	 #APP
 144              	# 152 "src/../h/riscv.hpp" 1
 153              	    return stval;
 145              		csrr a5, stval
 146              	# 0 "" 2
 147              	 #NO_APP
 148 0078 2334F4FC 		sd	a5,-56(s0)
 149              		.loc 2 153 5 is_stmt 1
 150              		.loc 2 153 12 is_stmt 0
 151 007c 833984FC 		ld	s3,-56(s0)
 152              	.LVL2:
 153              	.LBE51:
 154              	.LBE50:
 121:src/riscv.cpp ****         printString("Neocekivani prekid! scause: "); printInteger(scause);
 155              		.loc 1 121 9 is_stmt 1
 156              		.loc 1 121 20 is_stmt 0
 157 0080 17050000 		lla	a0,.LC0
 157      13050500 
 158              	.LEHB0:
 159 0088 97000000 		call	_Z11printStringPKc
 159      E7800000 
 160              	.LVL3:
 161              		.loc 1 121 54 is_stmt 1
 162              		.loc 1 121 66 is_stmt 0
 163 0090 13050900 		mv	a0,s2
 164 0094 97000000 		call	_Z12printIntegerm
 164      E7800000 
 165              	.LVL4:
 122:src/riscv.cpp ****         printString(", sepc: "); printInteger(sepc);
 166              		.loc 1 122 9 is_stmt 1
 167              		.loc 1 122 20 is_stmt 0
 168 009c 17050000 		lla	a0,.LC1
 168      13050500 
 169 00a4 97000000 		call	_Z11printStringPKc
 169      E7800000 
GAS LISTING /tmp/ccv69WGL.s 			page 9


 170              	.LVL5:
 171              		.loc 1 122 34 is_stmt 1
 172              		.loc 1 122 46 is_stmt 0
 173 00ac 13850400 		mv	a0,s1
 174 00b0 97000000 		call	_Z12printIntegerm
 174      E7800000 
 175              	.LVL6:
 123:src/riscv.cpp ****         printString(", stval: "); printInteger(stval); printString("\n");
 176              		.loc 1 123 9 is_stmt 1
 177              		.loc 1 123 20 is_stmt 0
 178 00b8 17050000 		lla	a0,.LC2
 178      13050500 
 179 00c0 97000000 		call	_Z11printStringPKc
 179      E7800000 
 180              	.LVL7:
 181              		.loc 1 123 35 is_stmt 1
 182              		.loc 1 123 47 is_stmt 0
 183 00c8 13850900 		mv	a0,s3
 184 00cc 97000000 		call	_Z12printIntegerm
 184      E7800000 
 185              	.LVL8:
 186              		.loc 1 123 56 is_stmt 1
 187              		.loc 1 123 67 is_stmt 0
 188 00d4 17050000 		lla	a0,.LC3
 188      13050500 
 189 00dc 97000000 		call	_Z11printStringPKc
 189      E7800000 
 190              	.LVL9:
 124:src/riscv.cpp ****         w_sepc(sepc + 4);
 191              		.loc 1 124 9 is_stmt 1
 192              		.loc 1 124 15 is_stmt 0
 193 00e4 93844400 		addi	s1,s1,4
 194              	.LVL10:
 195              	.LBB52:
 196              	.LBB53:
 134:src/../h/riscv.hpp **** }
 197              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 198              		.loc 2 134 65 is_stmt 0
 199              	 #APP
 200              	# 134 "src/../h/riscv.hpp" 1
 201              		csrw sepc, s1
 202              	# 0 "" 2
 203              	.LVL11:
 204              	 #NO_APP
 205              	.LBE53:
 206              	.LBE52:
 125:src/riscv.cpp ****         return 0;          // sret
 207              		.loc 1 125 9 is_stmt 1
 208              		.loc 1 125 16 is_stmt 0
 209 00ec 13050000 		li	a0,0
 210              	.LVL12:
 211              	.L3:
 212              	.LBE49:
 213              	.LBE48:
 214              	.LBE89:
 126:src/riscv.cpp ****     }
GAS LISTING /tmp/ccv69WGL.s 			page 10


 127:src/riscv.cpp **** }
 215              		.loc 1 127 1
 216 00f0 83308104 		ld	ra,72(sp)
 217              		.cfi_remember_state
 218              		.cfi_restore 1
 219 00f4 03340104 		ld	s0,64(sp)
 220              		.cfi_restore 8
 221              		.cfi_def_cfa 2, 80
 222 00f8 83348103 		ld	s1,56(sp)
 223              		.cfi_restore 9
 224 00fc 03390103 		ld	s2,48(sp)
 225              		.cfi_restore 18
 226 0100 83398102 		ld	s3,40(sp)
 227              		.cfi_restore 19
 228 0104 033A0102 		ld	s4,32(sp)
 229              		.cfi_restore 20
 230 0108 13010105 		addi	sp,sp,80
 231              		.cfi_def_cfa_offset 0
 232 010c 67800000 		jr	ra
 233              	.LVL13:
 234              	.L30:
 235              		.cfi_restore_state
 236              	.LBB90:
 237              	.LBB56:
  40:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(code));
 238              		.loc 1 40 9 is_stmt 1
  41:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r"(a1));
 239              		.loc 1 41 9
  41:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r"(a1));
 240              		.loc 1 41 51 is_stmt 0
 241              	 #APP
 242              	# 41 "src/riscv.cpp" 1
 243              		mv a5, a0
 244              	# 0 "" 2
 245              	.LVL14:
  42:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r"(a2));
 246              		.loc 1 42 9 is_stmt 1
  42:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r"(a2));
 247              		.loc 1 42 49 is_stmt 0
 248              	# 42 "src/riscv.cpp" 1
 249              		mv s2, a1
 250              	# 0 "" 2
 251              	.LVL15:
  43:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r"(a3));
 252              		.loc 1 43 9 is_stmt 1
  43:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r"(a3));
 253              		.loc 1 43 49 is_stmt 0
 254              	# 43 "src/riscv.cpp" 1
 255              		mv a0, a2
 256              	# 0 "" 2
 257              	.LVL16:
  44:src/riscv.cpp ****         __asm__ volatile("mv %0, a4" : "=r"(a4));
 258              		.loc 1 44 9 is_stmt 1
  44:src/riscv.cpp ****         __asm__ volatile("mv %0, a4" : "=r"(a4));
 259              		.loc 1 44 49 is_stmt 0
 260              	# 44 "src/riscv.cpp" 1
 261              		mv a1, a3
GAS LISTING /tmp/ccv69WGL.s 			page 11


 262              	# 0 "" 2
 263              	.LVL17:
  45:src/riscv.cpp **** 
 264              		.loc 1 45 9 is_stmt 1
  45:src/riscv.cpp **** 
 265              		.loc 1 45 49 is_stmt 0
 266              	# 45 "src/riscv.cpp" 1
 267              		mv a4, a4
 268              	# 0 "" 2
 269              	.LVL18:
  47:src/riscv.cpp ****             case MEM_ALLOC: {
 270              		.loc 1 47 9 is_stmt 1
 271              	 #NO_APP
 272 0124 13074002 		li	a4,36
 273 0128 636AF718 		bgtu	a5,a4,.L5
 274 012c 93972700 		slli	a5,a5,2
 275              	.LVL19:
 276 0130 17070000 		lla	a4,.L7
 276      13070700 
 277 0138 B387E700 		add	a5,a5,a4
 278 013c 83A70700 		lw	a5,0(a5)
 279 0140 B387E700 		add	a5,a5,a4
 280 0144 67800700 		jr	a5
 281              		.section	.rodata
 282              		.align	2
 283              		.align	2
 284              	.L7:
 285 0000 00000000 		.word	.L5-.L7
 286 0004 00000000 		.word	.L15-.L7
 287 0008 00000000 		.word	.L14-.L7
 288 000c 00000000 		.word	.L5-.L7
 289 0010 00000000 		.word	.L5-.L7
 290 0014 00000000 		.word	.L5-.L7
 291 0018 00000000 		.word	.L5-.L7
 292 001c 00000000 		.word	.L5-.L7
 293 0020 00000000 		.word	.L5-.L7
 294 0024 00000000 		.word	.L5-.L7
 295 0028 00000000 		.word	.L5-.L7
 296 002c 00000000 		.word	.L5-.L7
 297 0030 00000000 		.word	.L5-.L7
 298 0034 00000000 		.word	.L5-.L7
 299 0038 00000000 		.word	.L5-.L7
 300 003c 00000000 		.word	.L5-.L7
 301 0040 00000000 		.word	.L5-.L7
 302 0044 00000000 		.word	.L13-.L7
 303 0048 00000000 		.word	.L12-.L7
 304 004c 00000000 		.word	.L11-.L7
 305 0050 00000000 		.word	.L5-.L7
 306 0054 00000000 		.word	.L5-.L7
 307 0058 00000000 		.word	.L5-.L7
 308 005c 00000000 		.word	.L5-.L7
 309 0060 00000000 		.word	.L5-.L7
 310 0064 00000000 		.word	.L5-.L7
 311 0068 00000000 		.word	.L5-.L7
 312 006c 00000000 		.word	.L5-.L7
 313 0070 00000000 		.word	.L5-.L7
 314 0074 00000000 		.word	.L5-.L7
GAS LISTING /tmp/ccv69WGL.s 			page 12


 315 0078 00000000 		.word	.L5-.L7
 316 007c 00000000 		.word	.L5-.L7
 317 0080 00000000 		.word	.L5-.L7
 318 0084 00000000 		.word	.L10-.L7
 319 0088 00000000 		.word	.L9-.L7
 320 008c 00000000 		.word	.L8-.L7
 321 0090 00000000 		.word	.L6-.L7
 322              		.text
 323              	.L15:
 324              	.LBB57:
 325              	.LBB58:
  48:src/riscv.cpp ****                 void* ret = MemoryAllocator::mem_alloc((size_t)a1);
 326              		.loc 1 48 13
  48:src/riscv.cpp ****                 void* ret = MemoryAllocator::mem_alloc((size_t)a1);
 327              		.loc 1 48 29
 328              	.LBB59:
  49:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 329              		.loc 1 49 17
  49:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 330              		.loc 1 49 55 is_stmt 0
 331 0148 13050900 		mv	a0,s2
 332              	.LVL20:
 333 014c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 333      E7800000 
 334              	.LVL21:
  50:src/riscv.cpp ****                 w_sepc(sepc + 4);
 335              		.loc 1 50 17 is_stmt 1
  50:src/riscv.cpp ****                 w_sepc(sepc + 4);
 336              		.loc 1 50 59 is_stmt 0
 337              	 #APP
 338              	# 50 "src/riscv.cpp" 1
  51:src/riscv.cpp ****                 return 0;
 339              		mv a0, a0
 340              	# 0 "" 2
 341              		.loc 1 51 17 is_stmt 1
  51:src/riscv.cpp ****                 return 0;
 342              		.loc 1 51 23 is_stmt 0
 343              	 #NO_APP
 344 0158 93844400 		addi	s1,s1,4
 345              	.LVL22:
 346              	.LBB60:
 347              	.LBB61:
 134:src/../h/riscv.hpp **** }
 348              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 349              		.loc 2 134 65 is_stmt 0
 350              	 #APP
 351              	# 134 "src/../h/riscv.hpp" 1
 352              		csrw sepc, s1
 353              	# 0 "" 2
 354              	.LVL23:
 355              	 #NO_APP
 356              	.LBE61:
 357              	.LBE60:
  52:src/riscv.cpp ****             }
 358              		.loc 1 52 17 is_stmt 1
  52:src/riscv.cpp ****             }
GAS LISTING /tmp/ccv69WGL.s 			page 13


 359              		.loc 1 52 24 is_stmt 0
 360 0160 13050000 		li	a0,0
 361              	.LVL24:
 362 0164 6FF0DFF8 		j	.L3
 363              	.LVL25:
 364              	.L14:
 365              	.LBE59:
  54:src/riscv.cpp ****                 int ret = MemoryAllocator::mem_free((void*)a1);
 366              		.loc 1 54 13 is_stmt 1
  54:src/riscv.cpp ****                 int ret = MemoryAllocator::mem_free((void*)a1);
 367              		.loc 1 54 28
 368              	.LBB62:
  55:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 369              		.loc 1 55 17
  55:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 370              		.loc 1 55 52 is_stmt 0
 371 0168 13050900 		mv	a0,s2
 372              	.LVL26:
 373 016c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 373      E7800000 
 374              	.LVL27:
  56:src/riscv.cpp ****                 w_sepc(sepc + 4);
 375              		.loc 1 56 17 is_stmt 1
  56:src/riscv.cpp ****                 w_sepc(sepc + 4);
 376              		.loc 1 56 67 is_stmt 0
 377              	 #APP
 378              	# 56 "src/riscv.cpp" 1
  57:src/riscv.cpp ****                 return 0;
 379              		mv a0, a0
 380              	# 0 "" 2
 381              		.loc 1 57 17 is_stmt 1
  57:src/riscv.cpp ****                 return 0;
 382              		.loc 1 57 23 is_stmt 0
 383              	 #NO_APP
 384 0178 93844400 		addi	s1,s1,4
 385              	.LVL28:
 386              	.LBB63:
 387              	.LBB64:
 134:src/../h/riscv.hpp **** }
 388              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 389              		.loc 2 134 65 is_stmt 0
 390              	 #APP
 391              	# 134 "src/../h/riscv.hpp" 1
 392              		csrw sepc, s1
 393              	# 0 "" 2
 394              	.LVL29:
 395              	 #NO_APP
 396              	.LBE64:
 397              	.LBE63:
  58:src/riscv.cpp ****             }
 398              		.loc 1 58 17 is_stmt 1
  58:src/riscv.cpp ****             }
 399              		.loc 1 58 24 is_stmt 0
 400 0180 13050000 		li	a0,0
 401              	.LVL30:
 402 0184 6FF0DFF6 		j	.L3
GAS LISTING /tmp/ccv69WGL.s 			page 14


 403              	.LVL31:
 404              	.L13:
 405              	.LBE62:
  60:src/riscv.cpp ****                 CCB** handle = (CCB**)a1;
 406              		.loc 1 60 13 is_stmt 1
  60:src/riscv.cpp ****                 CCB** handle = (CCB**)a1;
 407              		.loc 1 60 33
 408              	.LBB65:
  61:src/riscv.cpp ****                 CCB::Body start_routine = (CCB::Body)a2;
 409              		.loc 1 61 17
  62:src/riscv.cpp ****                 void* arg = (void*)a3;
 410              		.loc 1 62 17
  63:src/riscv.cpp ****                 *handle = CCB::createCoroutine(start_routine, arg);
 411              		.loc 1 63 17
  64:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 412              		.loc 1 64 17
  64:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 413              		.loc 1 64 47 is_stmt 0
 414 0188 97000000 		call	_ZN3CCB15createCoroutineEPFvPvES0_
 414      E7800000 
 415              	.LVL32:
  64:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 416              		.loc 1 64 25
 417 0190 2330A900 		sd	a0,0(s2)
  65:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 418              		.loc 1 65 17 is_stmt 1
  65:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 419              		.loc 1 65 40 is_stmt 0
 420 0194 630E0500 		beqz	a0,.L24
 421 0198 93070000 		li	a5,0
 422              	.L17:
 423              	.LVL33:
  66:src/riscv.cpp ****                 w_sepc(sepc + 4);
 424              		.loc 1 66 17 is_stmt 1 discriminator 4
  66:src/riscv.cpp ****                 w_sepc(sepc + 4);
 425              		.loc 1 66 59 is_stmt 0 discriminator 4
 426              	 #APP
 427              	# 66 "src/riscv.cpp" 1
  67:src/riscv.cpp ****                 return 0;
 428              		mv a0, a5
 429              	# 0 "" 2
 430              		.loc 1 67 17 is_stmt 1 discriminator 4
  67:src/riscv.cpp ****                 return 0;
 431              		.loc 1 67 23 is_stmt 0 discriminator 4
 432              	 #NO_APP
 433 01a0 93844400 		addi	s1,s1,4
 434              	.LVL34:
 435              	.LBB66:
 436              	.LBB67:
 134:src/../h/riscv.hpp **** }
 437              		.loc 2 134 5 is_stmt 1 discriminator 4
 134:src/../h/riscv.hpp **** }
 438              		.loc 2 134 65 is_stmt 0 discriminator 4
 439              	 #APP
 440              	# 134 "src/../h/riscv.hpp" 1
 441              		csrw sepc, s1
 442              	# 0 "" 2
GAS LISTING /tmp/ccv69WGL.s 			page 15


 443              	.LVL35:
 444              	 #NO_APP
 445              	.LBE67:
 446              	.LBE66:
  68:src/riscv.cpp ****             }
 447              		.loc 1 68 17 is_stmt 1 discriminator 4
  68:src/riscv.cpp ****             }
 448              		.loc 1 68 24 is_stmt 0 discriminator 4
 449 01a8 13050000 		li	a0,0
 450 01ac 6FF05FF4 		j	.L3
 451              	.LVL36:
 452              	.L24:
  65:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 453              		.loc 1 65 40
 454 01b0 9307F0FF 		li	a5,-1
 455 01b4 6FF09FFE 		j	.L17
 456              	.LVL37:
 457              	.L11:
 458              	.LBE65:
  70:src/riscv.cpp ****                 CCB::dispatch();  // promenjen kontekst
 459              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****                 CCB::dispatch();  // promenjen kontekst
 460              		.loc 1 70 35
  71:src/riscv.cpp ****                 return 1;         // ret
 461              		.loc 1 71 17
  71:src/riscv.cpp ****                 return 1;         // ret
 462              		.loc 1 71 30 is_stmt 0
 463 01b8 97000000 		call	_ZN3CCB8dispatchEv
 463      E7800000 
 464              	.LVL38:
  72:src/riscv.cpp ****             }
 465              		.loc 1 72 17 is_stmt 1
  72:src/riscv.cpp ****             }
 466              		.loc 1 72 24 is_stmt 0
 467 01c0 13051000 		li	a0,1
 468 01c4 6FF0DFF2 		j	.L3
 469              	.LVL39:
 470              	.L12:
  74:src/riscv.cpp ****                 CCB::running->setFinished(true);
 471              		.loc 1 74 13 is_stmt 1
  74:src/riscv.cpp ****                 CCB::running->setFinished(true);
 472              		.loc 1 74 31
  75:src/riscv.cpp ****                 CCB::dispatch();  // promenjen kontekst
 473              		.loc 1 75 17
 474              	.LBB68:
 475              	.LBB69:
 476              		.file 3 "src/../h/ccb.hpp"
   1:src/../h/ccb.hpp **** //
   2:src/../h/ccb.hpp **** // Created by os on 9/26/25.
   3:src/../h/ccb.hpp **** //
   4:src/../h/ccb.hpp **** 
   5:src/../h/ccb.hpp **** #ifndef PROJECT_BASE_V1_1_CCB_HPP
   6:src/../h/ccb.hpp **** #define PROJECT_BASE_V1_1_CCB_HPP
   7:src/../h/ccb.hpp **** 
   8:src/../h/ccb.hpp **** #include "../lib/hw.h"
   9:src/../h/ccb.hpp **** #include "Scheduler.hpp"
  10:src/../h/ccb.hpp **** 
GAS LISTING /tmp/ccv69WGL.s 			page 16


  11:src/../h/ccb.hpp **** class CCB {
  12:src/../h/ccb.hpp **** public:
  13:src/../h/ccb.hpp **** 
  14:src/../h/ccb.hpp ****     ~CCB() {delete[] stack;}
  15:src/../h/ccb.hpp **** 
  16:src/../h/ccb.hpp ****     bool isFinished() const { return finished; }
  17:src/../h/ccb.hpp **** 
  18:src/../h/ccb.hpp ****     void setFinished(bool finished) {
  19:src/../h/ccb.hpp ****         CCB::finished = finished;
 477              		.loc 3 19 9
 478              		.loc 3 19 23 is_stmt 0
 479 01c8 97070000 		ld	a5,_ZN3CCB7runningE
 479      83B70700 
 480 01d0 13071000 		li	a4,1
 481 01d4 2388E702 		sb	a4,48(a5)
 482              	.LVL40:
 483              	.LBE69:
 484              	.LBE68:
  76:src/riscv.cpp ****                 return 1;         // ret
 485              		.loc 1 76 17 is_stmt 1
  76:src/riscv.cpp ****                 return 1;         // ret
 486              		.loc 1 76 30 is_stmt 0
 487 01d8 97000000 		call	_ZN3CCB8dispatchEv
 487      E7800000 
 488              	.LVL41:
  77:src/riscv.cpp ****             }
 489              		.loc 1 77 17 is_stmt 1
  77:src/riscv.cpp ****             }
 490              		.loc 1 77 24 is_stmt 0
 491 01e0 13051000 		li	a0,1
 492 01e4 6FF0DFF0 		j	.L3
 493              	.LVL42:
 494              	.L10:
  79:src/riscv.cpp ****                 sem_t* handle = (sem_t*)a1;
 495              		.loc 1 79 13 is_stmt 1
  79:src/riscv.cpp ****                 sem_t* handle = (sem_t*)a1;
 496              		.loc 1 79 28
 497              	.LBB70:
  80:src/riscv.cpp ****                 unsigned init = (unsigned)a2;
 498              		.loc 1 80 17
  81:src/riscv.cpp ****                 *handle = new _sem(init);
 499              		.loc 1 81 17
  81:src/riscv.cpp ****                 *handle = new _sem(init);
 500              		.loc 1 81 26 is_stmt 0
 501 01e8 9B090500 		sext.w	s3,a0
 502              	.LVL43:
  82:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 503              		.loc 1 82 17 is_stmt 1
  82:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 504              		.loc 1 82 40 is_stmt 0
 505 01ec 13058001 		li	a0,24
 506              	.LVL44:
 507 01f0 97000000 		call	_ZN4_semnwEm
 507      E7800000 
 508              	.LVL45:
 509              	.LEHE0:
 510 01f8 130A0500 		mv	s4,a0
GAS LISTING /tmp/ccv69WGL.s 			page 17


 511 01fc 93850900 		mv	a1,s3
 512              	.LEHB1:
 513 0200 97000000 		call	_ZN4_semC1Ej
 513      E7800000 
 514              	.LVL46:
 515              	.LEHE1:
  82:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 516              		.loc 1 82 25 discriminator 2
 517 0208 23304901 		sd	s4,0(s2)
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 518              		.loc 1 83 17 is_stmt 1 discriminator 2
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 519              		.loc 1 83 40 is_stmt 0 discriminator 2
 520 020c 630E0A00 		beqz	s4,.L25
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
 521              		.loc 1 83 40
 522 0210 93070000 		li	a5,0
 523              	.L18:
 524              	.LVL47:
  84:src/riscv.cpp ****                 w_sepc(sepc + 4);
 525              		.loc 1 84 17 is_stmt 1 discriminator 4
  84:src/riscv.cpp ****                 w_sepc(sepc + 4);
 526              		.loc 1 84 59 is_stmt 0 discriminator 4
 527              	 #APP
 528              	# 84 "src/riscv.cpp" 1
  85:src/riscv.cpp ****                 return 0;
 529              		mv a0, a5
 530              	# 0 "" 2
 531              		.loc 1 85 17 is_stmt 1 discriminator 4
  85:src/riscv.cpp ****                 return 0;
 532              		.loc 1 85 23 is_stmt 0 discriminator 4
 533              	 #NO_APP
 534 0218 93844400 		addi	s1,s1,4
 535              	.LVL48:
 536              	.LBB71:
 537              	.LBB72:
 134:src/../h/riscv.hpp **** }
 538              		.loc 2 134 5 is_stmt 1 discriminator 4
 134:src/../h/riscv.hpp **** }
 539              		.loc 2 134 65 is_stmt 0 discriminator 4
 540              	 #APP
 541              	# 134 "src/../h/riscv.hpp" 1
 542              		csrw sepc, s1
 543              	# 0 "" 2
 544              	.LVL49:
 545              	 #NO_APP
 546              	.LBE72:
 547              	.LBE71:
  86:src/riscv.cpp ****             }
 548              		.loc 1 86 17 is_stmt 1 discriminator 4
  86:src/riscv.cpp ****             }
 549              		.loc 1 86 24 is_stmt 0 discriminator 4
 550 0220 13050000 		li	a0,0
 551 0224 6FF0DFEC 		j	.L3
 552              	.LVL50:
 553              	.L25:
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
GAS LISTING /tmp/ccv69WGL.s 			page 18


 554              		.loc 1 83 40
 555 0228 9307F0FF 		li	a5,-1
 556 022c 6FF09FFE 		j	.L18
 557              	.LVL51:
 558              	.L9:
 559              	.LBE70:
  88:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 560              		.loc 1 88 13 is_stmt 1
  88:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 561              		.loc 1 88 29
 562              	.LBB73:
  89:src/riscv.cpp ****                 if (handle) delete handle;
 563              		.loc 1 89 17
  90:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 564              		.loc 1 90 17
 565 0230 631C0900 		bnez	s2,.L32
 566              	.LVL52:
 567              	.L19:
  91:src/riscv.cpp ****                 w_sepc(sepc + 4);
 568              		.loc 1 91 17
  91:src/riscv.cpp ****                 w_sepc(sepc + 4);
 569              		.loc 1 91 45 is_stmt 0
 570              	 #APP
 571              	# 91 "src/riscv.cpp" 1
  92:src/riscv.cpp ****                 return 0;
 572              		li a0, 0
 573              	# 0 "" 2
 574              		.loc 1 92 17 is_stmt 1
  92:src/riscv.cpp ****                 return 0;
 575              		.loc 1 92 23 is_stmt 0
 576              	 #NO_APP
 577 0238 93844400 		addi	s1,s1,4
 578              	.LVL53:
 579              	.LBB74:
 580              	.LBB75:
 134:src/../h/riscv.hpp **** }
 581              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 582              		.loc 2 134 65 is_stmt 0
 583              	 #APP
 584              	# 134 "src/../h/riscv.hpp" 1
 585              		csrw sepc, s1
 586              	# 0 "" 2
 587              	.LVL54:
 588              	 #NO_APP
 589              	.LBE75:
 590              	.LBE74:
  93:src/riscv.cpp ****             }
 591              		.loc 1 93 17 is_stmt 1
  93:src/riscv.cpp ****             }
 592              		.loc 1 93 24 is_stmt 0
 593 0240 13050000 		li	a0,0
 594 0244 6FF0DFEA 		j	.L3
 595              	.LVL55:
 596              	.L32:
  90:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 597              		.loc 1 90 29 is_stmt 1 discriminator 2
GAS LISTING /tmp/ccv69WGL.s 			page 19


  90:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 598              		.loc 1 90 36 is_stmt 0 discriminator 2
 599 0248 13050900 		mv	a0,s2
 600              	.LVL56:
 601 024c 97000000 		call	_ZN4_semD1Ev
 601      E7800000 
 602              	.LVL57:
 603 0254 13050900 		mv	a0,s2
 604              	.LEHB2:
 605 0258 97000000 		call	_ZN4_semdlEPv
 605      E7800000 
 606              	.LVL58:
 607 0260 6FF05FFD 		j	.L19
 608              	.LVL59:
 609              	.L8:
 610              	.LBE73:
  95:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 611              		.loc 1 95 13 is_stmt 1
  95:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 612              		.loc 1 95 28
 613              	.LBB76:
  96:src/riscv.cpp ****                 int ret = handle ? handle->wait() : -1;
 614              		.loc 1 96 17
  97:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 615              		.loc 1 97 17
  97:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 616              		.loc 1 97 34 is_stmt 0
 617 0264 631E0900 		bnez	s2,.L33
 618 0268 1305F0FF 		li	a0,-1
 619              	.LVL60:
 620              	.L20:
  98:src/riscv.cpp ****                 w_sepc(sepc + 4);
 621              		.loc 1 98 17 is_stmt 1 discriminator 4
  98:src/riscv.cpp ****                 w_sepc(sepc + 4);
 622              		.loc 1 98 67 is_stmt 0 discriminator 4
 623              	 #APP
 624              	# 98 "src/riscv.cpp" 1
  99:src/riscv.cpp ****                 return 0;
 625              		mv a0, a0
 626              	# 0 "" 2
 627              		.loc 1 99 17 is_stmt 1 discriminator 4
  99:src/riscv.cpp ****                 return 0;
 628              		.loc 1 99 23 is_stmt 0 discriminator 4
 629              	 #NO_APP
 630 0270 93844400 		addi	s1,s1,4
 631              	.LVL61:
 632              	.LBB77:
 633              	.LBB78:
 134:src/../h/riscv.hpp **** }
 634              		.loc 2 134 5 is_stmt 1 discriminator 4
 134:src/../h/riscv.hpp **** }
 635              		.loc 2 134 65 is_stmt 0 discriminator 4
 636              	 #APP
 637              	# 134 "src/../h/riscv.hpp" 1
 638              		csrw sepc, s1
 639              	# 0 "" 2
 640              	.LVL62:
GAS LISTING /tmp/ccv69WGL.s 			page 20


 641              	 #NO_APP
 642              	.LBE78:
 643              	.LBE77:
 100:src/riscv.cpp ****             }
 644              		.loc 1 100 17 is_stmt 1 discriminator 4
 100:src/riscv.cpp ****             }
 645              		.loc 1 100 24 is_stmt 0 discriminator 4
 646 0278 13050000 		li	a0,0
 647              	.LVL63:
 648 027c 6FF05FE7 		j	.L3
 649              	.LVL64:
 650              	.L33:
  97:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 651              		.loc 1 97 48 discriminator 1
 652 0280 13050900 		mv	a0,s2
 653              	.LVL65:
 654 0284 97000000 		call	_ZN4_sem4waitEv
 654      E7800000 
 655              	.LVL66:
 656 028c 6FF01FFE 		j	.L20
 657              	.LVL67:
 658              	.L6:
 659              	.LBE76:
 102:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 660              		.loc 1 102 13 is_stmt 1
 102:src/riscv.cpp ****                 sem_t handle = (sem_t)a1;
 661              		.loc 1 102 30
 662              	.LBB79:
 103:src/riscv.cpp ****                 int ret = handle ? handle->signal() : -1;
 663              		.loc 1 103 17
 104:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 664              		.loc 1 104 17
 104:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 665              		.loc 1 104 34 is_stmt 0
 666 0290 631E0900 		bnez	s2,.L34
 667 0294 1305F0FF 		li	a0,-1
 668              	.LVL68:
 669              	.L21:
 105:src/riscv.cpp ****                 w_sepc(sepc + 4);
 670              		.loc 1 105 17 is_stmt 1 discriminator 4
 105:src/riscv.cpp ****                 w_sepc(sepc + 4);
 671              		.loc 1 105 67 is_stmt 0 discriminator 4
 672              	 #APP
 673              	# 105 "src/riscv.cpp" 1
 106:src/riscv.cpp ****                 return 0;
 674              		mv a0, a0
 675              	# 0 "" 2
 676              		.loc 1 106 17 is_stmt 1 discriminator 4
 106:src/riscv.cpp ****                 return 0;
 677              		.loc 1 106 23 is_stmt 0 discriminator 4
 678              	 #NO_APP
 679 029c 93844400 		addi	s1,s1,4
 680              	.LVL69:
 681              	.LBB80:
 682              	.LBB81:
 134:src/../h/riscv.hpp **** }
 683              		.loc 2 134 5 is_stmt 1 discriminator 4
GAS LISTING /tmp/ccv69WGL.s 			page 21


 134:src/../h/riscv.hpp **** }
 684              		.loc 2 134 65 is_stmt 0 discriminator 4
 685              	 #APP
 686              	# 134 "src/../h/riscv.hpp" 1
 687              		csrw sepc, s1
 688              	# 0 "" 2
 689              	.LVL70:
 690              	 #NO_APP
 691              	.LBE81:
 692              	.LBE80:
 107:src/riscv.cpp ****             }
 693              		.loc 1 107 17 is_stmt 1 discriminator 4
 107:src/riscv.cpp ****             }
 694              		.loc 1 107 24 is_stmt 0 discriminator 4
 695 02a4 13050000 		li	a0,0
 696              	.LVL71:
 697 02a8 6FF09FE4 		j	.L3
 698              	.LVL72:
 699              	.L34:
 104:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"((uint64)ret));
 700              		.loc 1 104 50 discriminator 1
 701 02ac 13050900 		mv	a0,s2
 702              	.LVL73:
 703 02b0 97000000 		call	_ZN4_sem6signalEv
 703      E7800000 
 704              	.LVL74:
 705 02b8 6FF01FFE 		j	.L21
 706              	.LVL75:
 707              	.L5:
 708              	.LBE79:
 709              	.LBE58:
 710              	.LBE57:
 111:src/riscv.cpp ****         return 0;
 711              		.loc 1 111 9 is_stmt 1
 111:src/riscv.cpp ****         return 0;
 712              		.loc 1 111 15 is_stmt 0
 713 02bc 93844400 		addi	s1,s1,4
 714              	.LVL76:
 715              	.LBB84:
 716              	.LBB85:
 134:src/../h/riscv.hpp **** }
 717              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 718              		.loc 2 134 65 is_stmt 0
 719              	 #APP
 720              	# 134 "src/../h/riscv.hpp" 1
 721              		csrw sepc, s1
 722              	# 0 "" 2
 723              	.LVL77:
 724              	 #NO_APP
 725              	.LBE85:
 726              	.LBE84:
 112:src/riscv.cpp **** 
 727              		.loc 1 112 9 is_stmt 1
 112:src/riscv.cpp **** 
 728              		.loc 1 112 16 is_stmt 0
 729 02c4 13050000 		li	a0,0
GAS LISTING /tmp/ccv69WGL.s 			page 22


 730              	.LVL78:
 731 02c8 6FF09FE2 		j	.L3
 732              	.LVL79:
 733              	.L31:
 734              	.LBE56:
 735              	.LBB87:
 115:src/riscv.cpp ****         CCB::dispatch();   // promena konteksta
 736              		.loc 1 115 9 is_stmt 1
 737              	.LBB54:
 738              	.LBB55:
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 739              		.loc 2 168 5
 740              		.loc 2 168 64 is_stmt 0
 741 02cc 93072000 		li	a5,2
 742              	 #APP
 743              	# 168 "src/../h/riscv.hpp" 1
 169              	}
 744              		csrc sip, a5
 745              	# 0 "" 2
 746              	.LVL80:
 747              	 #NO_APP
 748              	.LBE55:
 749              	.LBE54:
 116:src/riscv.cpp ****         return 1;          // ret
 750              		.loc 1 116 9 is_stmt 1
 116:src/riscv.cpp ****         return 1;          // ret
 751              		.loc 1 116 22 is_stmt 0
 752 02d4 97000000 		call	_ZN3CCB8dispatchEv
 752      E7800000 
 753              	.LVL81:
 754              	.LEHE2:
 117:src/riscv.cpp **** 
 755              		.loc 1 117 9 is_stmt 1
 117:src/riscv.cpp **** 
 756              		.loc 1 117 16 is_stmt 0
 757 02dc 13051000 		li	a0,1
 758 02e0 6FF01FE1 		j	.L3
 759              	.LVL82:
 760              	.L28:
 761 02e4 93040500 		mv	s1,a0
 762              	.LVL83:
 763              	.LBE87:
 764              	.LBB88:
GAS LISTING /tmp/ccv69WGL.s 			page 23


 765              	.LBB86:
 766              	.LBB83:
 767              	.LBB82:
  82:src/riscv.cpp ****                 uint64 ret = (*handle) ? 0 : (uint64)-1;
 768              		.loc 1 82 40
 769 02e8 13050A00 		mv	a0,s4
 770 02ec 97000000 		call	_ZN4_semdlEPv
 770      E7800000 
 771              	.LVL84:
 772 02f4 13850400 		mv	a0,s1
 773              	.LEHB3:
 774 02f8 97000000 		call	_Unwind_Resume
 774      E7800000 
 775              	.LVL85:
 776              	.LEHE3:
 777              	.LBE82:
 778              	.LBE83:
 779              	.LBE86:
 780              	.LBE88:
 781              	.LBE90:
 782              		.cfi_endproc
 783              	.LFE41:
 784              		.globl	__gxx_personality_v0
 785              		.section	.gcc_except_table,"aw",@progbits
 786              	.LLSDA41:
 787 0000 FF       		.byte	0xff
 788 0001 FF       		.byte	0xff
 789 0002 03       		.byte	0x3
 790 0003 34       		.byte	0x34
 791 0004 00000000 		.4byte	.LEHB0-.LFB41
 792 0008 00000000 		.4byte	.LEHE0-.LEHB0
 793 000c 00000000 		.4byte	0
 794 0010 00       		.byte	0
 795 0011 00000000 		.4byte	.LEHB1-.LFB41
 796 0015 00000000 		.4byte	.LEHE1-.LEHB1
 797 0019 00000000 		.4byte	.L28-.LFB41
 798 001d 00       		.byte	0
 799 001e 00000000 		.4byte	.LEHB2-.LFB41
 800 0022 00000000 		.4byte	.LEHE2-.LEHB2
 801 0026 00000000 		.4byte	0
 802 002a 00       		.byte	0
 803 002b 00000000 		.4byte	.LEHB3-.LFB41
 804 002f 00000000 		.4byte	.LEHE3-.LEHB3
 805 0033 00000000 		.4byte	0
 806 0037 00       		.byte	0
 807              		.text
 809              	.Letext0:
 810              		.file 4 "src/../h/../lib/hw.h"
 811              		.file 5 "src/../h/../h/list.hpp"
 812              		.file 6 "src/../h/_semaphore.hpp"
 813              		.file 7 "src/../h/print.hpp"
 814              		.file 8 "src/../h/MemoryAllocator.hpp"
 815              		.file 9 "src/../h/syscall_c.hpp"
 4705              		.align	3
 4708              	DW.ref.__gxx_personality_v0:
 4709 0000 00000000 		.dword	__gxx_personality_v0
 4709      00000000 
GAS LISTING /tmp/ccv69WGL.s 			page 24


 4710              		.ident	"GCC: () 9.3.0"
GAS LISTING /tmp/ccv69WGL.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccv69WGL.s:12     .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccv69WGL.s:16     .text:0000000000000000 .L0 
     /tmp/ccv69WGL.s:17     .text:0000000000000000 .L0 
     /tmp/ccv69WGL.s:18     .text:0000000000000004 .L0 
     /tmp/ccv69WGL.s:20     .text:0000000000000008 .L0 
     /tmp/ccv69WGL.s:22     .text:000000000000000c .L0 
     /tmp/ccv69WGL.s:24     .text:000000000000000c .L0 
       src/riscv.cpp:27     .text:000000000000000c .L0 
     /tmp/ccv69WGL.s:30     .text:0000000000000010 .L0 
       src/riscv.cpp:28     .text:0000000000000010 .L0 
     /tmp/ccv69WGL.s:36     .text:0000000000000014 .L0 
     /tmp/ccv69WGL.s:37     .text:0000000000000018 .L0 
     /tmp/ccv69WGL.s:38     .text:0000000000000018 .L0 
     /tmp/ccv69WGL.s:40     .text:000000000000001c .L0 
     /tmp/ccv69WGL.s:42     .text:0000000000000020 .L0 
     /tmp/ccv69WGL.s:62     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccv69WGL.s:65     .text:0000000000000020 .L0 
     /tmp/ccv69WGL.s:4708   .sdata.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccv69WGL.s:68     .text:0000000000000020 .L0 
     /tmp/ccv69WGL.s:69     .text:0000000000000024 .L0 
     /tmp/ccv69WGL.s:76     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:77     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:78     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:79     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:80     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:81     .text:000000000000003c .L0 
     /tmp/ccv69WGL.s:83     .text:0000000000000040 .L0 
     /tmp/ccv69WGL.s:88     .text:0000000000000040 .L0 
     /tmp/ccv69WGL.s:89     .text:0000000000000040 .L0 
     /tmp/ccv69WGL.s:90     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:116    .text:0000000000000040 .L0 
     /tmp/ccv69WGL.s:98     .text:0000000000000048 .L0 
     /tmp/ccv69WGL.s:99     .text:0000000000000048 .L0 
     /tmp/ccv69WGL.s:106    .text:000000000000004c .L0 
     /tmp/ccv69WGL.s:107    .text:000000000000004c .L0 
     /tmp/ccv69WGL.s:108    .text:000000000000004c .L0 
  src/../h/riscv.hpp:128    .text:000000000000004c .L0 
     /tmp/ccv69WGL.s:116    .text:0000000000000054 .L0 
     /tmp/ccv69WGL.s:117    .text:0000000000000054 .L0 
     /tmp/ccv69WGL.s:123    .text:0000000000000058 .L0 
     /tmp/ccv69WGL.s:124    .text:0000000000000058 .L0 
     /tmp/ccv69WGL.s:126    .text:000000000000005c .L0 
     /tmp/ccv69WGL.s:132    .text:0000000000000064 .L0 
     /tmp/ccv69WGL.s:140    .text:0000000000000074 .L0 
     /tmp/ccv69WGL.s:141    .text:0000000000000074 .L0 
     /tmp/ccv69WGL.s:142    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:152    .text:0000000000000074 .L0 
     /tmp/ccv69WGL.s:150    .text:000000000000007c .L0 
     /tmp/ccv69WGL.s:151    .text:000000000000007c .L0 
     /tmp/ccv69WGL.s:156    .text:0000000000000080 .L0 
     /tmp/ccv69WGL.s:157    .text:0000000000000080 .L0 
     /tmp/ccv69WGL.s:162    .text:0000000000000090 .L0 
     /tmp/ccv69WGL.s:163    .text:0000000000000090 .L0 
     /tmp/ccv69WGL.s:167    .text:000000000000009c .L0 
     /tmp/ccv69WGL.s:168    .text:000000000000009c .L0 
GAS LISTING /tmp/ccv69WGL.s 			page 26


     /tmp/ccv69WGL.s:172    .text:00000000000000ac .L0 
     /tmp/ccv69WGL.s:173    .text:00000000000000ac .L0 
     /tmp/ccv69WGL.s:177    .text:00000000000000b8 .L0 
     /tmp/ccv69WGL.s:178    .text:00000000000000b8 .L0 
     /tmp/ccv69WGL.s:182    .text:00000000000000c8 .L0 
     /tmp/ccv69WGL.s:183    .text:00000000000000c8 .L0 
     /tmp/ccv69WGL.s:187    .text:00000000000000d4 .L0 
     /tmp/ccv69WGL.s:188    .text:00000000000000d4 .L0 
     /tmp/ccv69WGL.s:192    .text:00000000000000e4 .L0 
     /tmp/ccv69WGL.s:193    .text:00000000000000e4 .L0 
     /tmp/ccv69WGL.s:198    .text:00000000000000e8 .L0 
  src/../h/riscv.hpp:134    .text:00000000000000e8 .L0 
     /tmp/ccv69WGL.s:208    .text:00000000000000ec .L0 
     /tmp/ccv69WGL.s:209    .text:00000000000000ec .L0 
     /tmp/ccv69WGL.s:216    .text:00000000000000f0 .L0 
     /tmp/ccv69WGL.s:217    .text:00000000000000f4 .L0 
     /tmp/ccv69WGL.s:218    .text:00000000000000f4 .L0 
     /tmp/ccv69WGL.s:220    .text:00000000000000f8 .L0 
     /tmp/ccv69WGL.s:221    .text:00000000000000f8 .L0 
     /tmp/ccv69WGL.s:223    .text:00000000000000fc .L0 
     /tmp/ccv69WGL.s:225    .text:0000000000000100 .L0 
     /tmp/ccv69WGL.s:227    .text:0000000000000104 .L0 
     /tmp/ccv69WGL.s:229    .text:0000000000000108 .L0 
     /tmp/ccv69WGL.s:231    .text:000000000000010c .L0 
     /tmp/ccv69WGL.s:235    .text:0000000000000110 .L0 
     /tmp/ccv69WGL.s:239    .text:0000000000000110 .L0 
     /tmp/ccv69WGL.s:240    .text:0000000000000110 .L0 
       src/riscv.cpp:41     .text:0000000000000110 .L0 
     /tmp/ccv69WGL.s:247    .text:0000000000000114 .L0 
       src/riscv.cpp:42     .text:0000000000000114 .L0 
     /tmp/ccv69WGL.s:253    .text:0000000000000118 .L0 
       src/riscv.cpp:43     .text:0000000000000118 .L0 
     /tmp/ccv69WGL.s:259    .text:000000000000011c .L0 
       src/riscv.cpp:44     .text:000000000000011c .L0 
     /tmp/ccv69WGL.s:265    .text:0000000000000120 .L0 
       src/riscv.cpp:45     .text:0000000000000120 .L0 
     /tmp/ccv69WGL.s:272    .text:0000000000000124 .L0 
     /tmp/ccv69WGL.s:327    .text:0000000000000148 .L0 
     /tmp/ccv69WGL.s:329    .text:0000000000000148 .L0 
     /tmp/ccv69WGL.s:330    .text:0000000000000148 .L0 
     /tmp/ccv69WGL.s:331    .text:0000000000000148 .L0 
     /tmp/ccv69WGL.s:336    .text:0000000000000154 .L0 
       src/riscv.cpp:50     .text:0000000000000154 .L0 
     /tmp/ccv69WGL.s:342    .text:0000000000000158 .L0 
     /tmp/ccv69WGL.s:344    .text:0000000000000158 .L0 
     /tmp/ccv69WGL.s:349    .text:000000000000015c .L0 
  src/../h/riscv.hpp:134    .text:000000000000015c .L0 
     /tmp/ccv69WGL.s:359    .text:0000000000000160 .L0 
     /tmp/ccv69WGL.s:360    .text:0000000000000160 .L0 
     /tmp/ccv69WGL.s:367    .text:0000000000000168 .L0 
     /tmp/ccv69WGL.s:369    .text:0000000000000168 .L0 
     /tmp/ccv69WGL.s:370    .text:0000000000000168 .L0 
     /tmp/ccv69WGL.s:371    .text:0000000000000168 .L0 
     /tmp/ccv69WGL.s:376    .text:0000000000000174 .L0 
       src/riscv.cpp:56     .text:0000000000000174 .L0 
     /tmp/ccv69WGL.s:382    .text:0000000000000178 .L0 
     /tmp/ccv69WGL.s:384    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccv69WGL.s 			page 27


     /tmp/ccv69WGL.s:389    .text:000000000000017c .L0 
  src/../h/riscv.hpp:134    .text:000000000000017c .L0 
     /tmp/ccv69WGL.s:399    .text:0000000000000180 .L0 
     /tmp/ccv69WGL.s:400    .text:0000000000000180 .L0 
     /tmp/ccv69WGL.s:407    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:409    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:410    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:411    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:412    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:413    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:414    .text:0000000000000188 .L0 
     /tmp/ccv69WGL.s:417    .text:0000000000000190 .L0 
     /tmp/ccv69WGL.s:419    .text:0000000000000194 .L0 
     /tmp/ccv69WGL.s:420    .text:0000000000000194 .L0 
     /tmp/ccv69WGL.s:425    .text:000000000000019c .L0 
       src/riscv.cpp:66     .text:000000000000019c .L0 
     /tmp/ccv69WGL.s:431    .text:00000000000001a0 .L0 
     /tmp/ccv69WGL.s:433    .text:00000000000001a0 .L0 
     /tmp/ccv69WGL.s:438    .text:00000000000001a4 .L0 
  src/../h/riscv.hpp:134    .text:00000000000001a4 .L0 
     /tmp/ccv69WGL.s:448    .text:00000000000001a8 .L0 
     /tmp/ccv69WGL.s:449    .text:00000000000001a8 .L0 
     /tmp/ccv69WGL.s:454    .text:00000000000001b0 .L0 
     /tmp/ccv69WGL.s:460    .text:00000000000001b8 .L0 
     /tmp/ccv69WGL.s:461    .text:00000000000001b8 .L0 
     /tmp/ccv69WGL.s:462    .text:00000000000001b8 .L0 
     /tmp/ccv69WGL.s:463    .text:00000000000001b8 .L0 
     /tmp/ccv69WGL.s:466    .text:00000000000001c0 .L0 
     /tmp/ccv69WGL.s:467    .text:00000000000001c0 .L0 
     /tmp/ccv69WGL.s:472    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:473    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:477    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:478    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:479    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:486    .text:00000000000001d8 .L0 
     /tmp/ccv69WGL.s:487    .text:00000000000001d8 .L0 
     /tmp/ccv69WGL.s:490    .text:00000000000001e0 .L0 
     /tmp/ccv69WGL.s:491    .text:00000000000001e0 .L0 
     /tmp/ccv69WGL.s:496    .text:00000000000001e8 .L0 
     /tmp/ccv69WGL.s:498    .text:00000000000001e8 .L0 
     /tmp/ccv69WGL.s:499    .text:00000000000001e8 .L0 
     /tmp/ccv69WGL.s:500    .text:00000000000001e8 .L0 
     /tmp/ccv69WGL.s:501    .text:00000000000001e8 .L0 
     /tmp/ccv69WGL.s:504    .text:00000000000001ec .L0 
     /tmp/ccv69WGL.s:505    .text:00000000000001ec .L0 
     /tmp/ccv69WGL.s:517    .text:0000000000000208 .L0 
     /tmp/ccv69WGL.s:519    .text:000000000000020c .L0 
     /tmp/ccv69WGL.s:520    .text:000000000000020c .L0 
     /tmp/ccv69WGL.s:522    .text:0000000000000210 .L0 
     /tmp/ccv69WGL.s:526    .text:0000000000000214 .L0 
       src/riscv.cpp:84     .text:0000000000000214 .L0 
     /tmp/ccv69WGL.s:532    .text:0000000000000218 .L0 
     /tmp/ccv69WGL.s:534    .text:0000000000000218 .L0 
     /tmp/ccv69WGL.s:539    .text:000000000000021c .L0 
  src/../h/riscv.hpp:134    .text:000000000000021c .L0 
     /tmp/ccv69WGL.s:549    .text:0000000000000220 .L0 
     /tmp/ccv69WGL.s:550    .text:0000000000000220 .L0 
GAS LISTING /tmp/ccv69WGL.s 			page 28


     /tmp/ccv69WGL.s:555    .text:0000000000000228 .L0 
     /tmp/ccv69WGL.s:561    .text:0000000000000230 .L0 
     /tmp/ccv69WGL.s:563    .text:0000000000000230 .L0 
     /tmp/ccv69WGL.s:564    .text:0000000000000230 .L0 
     /tmp/ccv69WGL.s:565    .text:0000000000000230 .L0 
     /tmp/ccv69WGL.s:569    .text:0000000000000234 .L0 
       src/riscv.cpp:91     .text:0000000000000234 .L0 
     /tmp/ccv69WGL.s:575    .text:0000000000000238 .L0 
     /tmp/ccv69WGL.s:577    .text:0000000000000238 .L0 
     /tmp/ccv69WGL.s:582    .text:000000000000023c .L0 
  src/../h/riscv.hpp:134    .text:000000000000023c .L0 
     /tmp/ccv69WGL.s:592    .text:0000000000000240 .L0 
     /tmp/ccv69WGL.s:593    .text:0000000000000240 .L0 
     /tmp/ccv69WGL.s:598    .text:0000000000000248 .L0 
     /tmp/ccv69WGL.s:599    .text:0000000000000248 .L0 
     /tmp/ccv69WGL.s:612    .text:0000000000000264 .L0 
     /tmp/ccv69WGL.s:614    .text:0000000000000264 .L0 
     /tmp/ccv69WGL.s:615    .text:0000000000000264 .L0 
     /tmp/ccv69WGL.s:616    .text:0000000000000264 .L0 
     /tmp/ccv69WGL.s:617    .text:0000000000000264 .L0 
     /tmp/ccv69WGL.s:622    .text:000000000000026c .L0 
       src/riscv.cpp:98     .text:000000000000026c .L0 
     /tmp/ccv69WGL.s:628    .text:0000000000000270 .L0 
     /tmp/ccv69WGL.s:630    .text:0000000000000270 .L0 
     /tmp/ccv69WGL.s:635    .text:0000000000000274 .L0 
  src/../h/riscv.hpp:134    .text:0000000000000274 .L0 
     /tmp/ccv69WGL.s:645    .text:0000000000000278 .L0 
     /tmp/ccv69WGL.s:646    .text:0000000000000278 .L0 
     /tmp/ccv69WGL.s:652    .text:0000000000000280 .L0 
     /tmp/ccv69WGL.s:661    .text:0000000000000290 .L0 
     /tmp/ccv69WGL.s:663    .text:0000000000000290 .L0 
     /tmp/ccv69WGL.s:664    .text:0000000000000290 .L0 
     /tmp/ccv69WGL.s:665    .text:0000000000000290 .L0 
     /tmp/ccv69WGL.s:666    .text:0000000000000290 .L0 
     /tmp/ccv69WGL.s:671    .text:0000000000000298 .L0 
       src/riscv.cpp:105    .text:0000000000000298 .L0 
     /tmp/ccv69WGL.s:677    .text:000000000000029c .L0 
     /tmp/ccv69WGL.s:679    .text:000000000000029c .L0 
     /tmp/ccv69WGL.s:684    .text:00000000000002a0 .L0 
  src/../h/riscv.hpp:134    .text:00000000000002a0 .L0 
     /tmp/ccv69WGL.s:694    .text:00000000000002a4 .L0 
     /tmp/ccv69WGL.s:695    .text:00000000000002a4 .L0 
     /tmp/ccv69WGL.s:701    .text:00000000000002ac .L0 
     /tmp/ccv69WGL.s:712    .text:00000000000002bc .L0 
     /tmp/ccv69WGL.s:713    .text:00000000000002bc .L0 
     /tmp/ccv69WGL.s:718    .text:00000000000002c0 .L0 
  src/../h/riscv.hpp:134    .text:00000000000002c0 .L0 
     /tmp/ccv69WGL.s:728    .text:00000000000002c4 .L0 
     /tmp/ccv69WGL.s:729    .text:00000000000002c4 .L0 
     /tmp/ccv69WGL.s:739    .text:00000000000002cc .L0 
     /tmp/ccv69WGL.s:740    .text:00000000000002cc .L0 
     /tmp/ccv69WGL.s:741    .text:00000000000002cc .L0 
     /tmp/ccv69WGL.s:751    .text:00000000000002d4 .L0 
     /tmp/ccv69WGL.s:752    .text:00000000000002d4 .L0 
     /tmp/ccv69WGL.s:756    .text:00000000000002dc .L0 
     /tmp/ccv69WGL.s:757    .text:00000000000002dc .L0 
     /tmp/ccv69WGL.s:769    .text:00000000000002e8 .L0 
GAS LISTING /tmp/ccv69WGL.s 			page 29


     /tmp/ccv69WGL.s:782    .text:0000000000000300 .L0 
     /tmp/ccv69WGL.s:816    .text:0000000000000300 .L0 
     /tmp/ccv69WGL.s:47     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccv69WGL.s:157    .text:0000000000000080 .L0 
     /tmp/ccv69WGL.s:50     .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccv69WGL.s:168    .text:000000000000009c .L0 
     /tmp/ccv69WGL.s:53     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccv69WGL.s:178    .text:00000000000000b8 .L0 
     /tmp/ccv69WGL.s:56     .rodata.str1.8:0000000000000040 .LC3
     /tmp/ccv69WGL.s:188    .text:00000000000000d4 .L0 
     /tmp/ccv69WGL.s:284    .rodata:0000000000000000 .L7
     /tmp/ccv69WGL.s:276    .text:0000000000000130 .L0 
     /tmp/ccv69WGL.s:479    .text:00000000000001c8 .L0 
     /tmp/ccv69WGL.s:234    .text:0000000000000110 .L30
     /tmp/ccv69WGL.s:733    .text:00000000000002cc .L31
     /tmp/ccv69WGL.s:707    .text:00000000000002bc .L5
     /tmp/ccv69WGL.s:211    .text:00000000000000f0 .L3
     /tmp/ccv69WGL.s:452    .text:00000000000001b0 .L24
     /tmp/ccv69WGL.s:422    .text:000000000000019c .L17
     /tmp/ccv69WGL.s:553    .text:0000000000000228 .L25
     /tmp/ccv69WGL.s:523    .text:0000000000000214 .L18
     /tmp/ccv69WGL.s:596    .text:0000000000000248 .L32
     /tmp/ccv69WGL.s:567    .text:0000000000000234 .L19
     /tmp/ccv69WGL.s:650    .text:0000000000000280 .L33
     /tmp/ccv69WGL.s:620    .text:000000000000026c .L20
     /tmp/ccv69WGL.s:699    .text:00000000000002ac .L34
     /tmp/ccv69WGL.s:669    .text:0000000000000298 .L21
     /tmp/ccv69WGL.s:323    .text:0000000000000148 .L15
     /tmp/ccv69WGL.s:364    .text:0000000000000168 .L14
     /tmp/ccv69WGL.s:404    .text:0000000000000188 .L13
     /tmp/ccv69WGL.s:470    .text:00000000000001c8 .L12
     /tmp/ccv69WGL.s:457    .text:00000000000001b8 .L11
     /tmp/ccv69WGL.s:494    .text:00000000000001e8 .L10
     /tmp/ccv69WGL.s:558    .text:0000000000000230 .L9
     /tmp/ccv69WGL.s:609    .text:0000000000000264 .L8
     /tmp/ccv69WGL.s:658    .text:0000000000000290 .L6
     /tmp/ccv69WGL.s:158    .text:0000000000000088 .LEHB0
     /tmp/ccv69WGL.s:63     .text:0000000000000020 .LFB41
     /tmp/ccv69WGL.s:509    .text:00000000000001f8 .LEHE0
     /tmp/ccv69WGL.s:512    .text:0000000000000200 .LEHB1
     /tmp/ccv69WGL.s:515    .text:0000000000000208 .LEHE1
     /tmp/ccv69WGL.s:760    .text:00000000000002e4 .L28
     /tmp/ccv69WGL.s:604    .text:0000000000000258 .LEHB2
     /tmp/ccv69WGL.s:754    .text:00000000000002dc .LEHE2
     /tmp/ccv69WGL.s:773    .text:00000000000002f8 .LEHB3
     /tmp/ccv69WGL.s:776    .text:0000000000000300 .LEHE3
     /tmp/ccv69WGL.s:2696   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccv69WGL.s:4578   .debug_str:000000000000084f .LASF186
     /tmp/ccv69WGL.s:4660   .debug_str:0000000000000b59 .LASF187
     /tmp/ccv69WGL.s:4616   .debug_str:00000000000009fb .LASF188
     /tmp/ccv69WGL.s:8      .text:0000000000000000 .Ltext0
     /tmp/ccv69WGL.s:809    .text:0000000000000300 .Letext0
     /tmp/ccv69WGL.s:4292   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccv69WGL.s:4420   .debug_str:0000000000000360 .LASF0
     /tmp/ccv69WGL.s:4448   .debug_str:000000000000047c .LASF1
     /tmp/ccv69WGL.s:4544   .debug_str:000000000000075a .LASF2
     /tmp/ccv69WGL.s:4554   .debug_str:00000000000007a5 .LASF4
GAS LISTING /tmp/ccv69WGL.s 			page 30


     /tmp/ccv69WGL.s:4432   .debug_str:00000000000003b5 .LASF3
     /tmp/ccv69WGL.s:4306   .debug_str:000000000000005d .LASF5
     /tmp/ccv69WGL.s:4516   .debug_str:0000000000000683 .LASF6
     /tmp/ccv69WGL.s:4504   .debug_str:0000000000000629 .LASF7
     /tmp/ccv69WGL.s:4438   .debug_str:000000000000040e .LASF8
     /tmp/ccv69WGL.s:4386   .debug_str:000000000000028a .LASF9
     /tmp/ccv69WGL.s:4394   .debug_str:00000000000002c5 .LASF10
     /tmp/ccv69WGL.s:4322   .debug_str:00000000000000c9 .LASF11
     /tmp/ccv69WGL.s:4378   .debug_str:000000000000025a .LASF12
     /tmp/ccv69WGL.s:4338   .debug_str:0000000000000141 .LASF13
     /tmp/ccv69WGL.s:4320   .debug_str:00000000000000b9 .LASF14
     /tmp/ccv69WGL.s:4582   .debug_str:000000000000091a .LASF15
     /tmp/ccv69WGL.s:4362   .debug_str:00000000000001e3 .LASF16
     /tmp/ccv69WGL.s:4572   .debug_str:0000000000000820 .LASF17
     /tmp/ccv69WGL.s:4644   .debug_str:0000000000000adb .LASF69
     /tmp/ccv69WGL.s:4530   .debug_str:00000000000006f0 .LASF189
     /tmp/ccv69WGL.s:4452   .debug_str:0000000000000495 .LASF18
     /tmp/ccv69WGL.s:4368   .debug_str:0000000000000219 .LASF19
     /tmp/ccv69WGL.s:4664   .debug_str:0000000000000b7e .LASF20
     /tmp/ccv69WGL.s:4404   .debug_str:0000000000000304 .LASF21
     /tmp/ccv69WGL.s:4414   .debug_str:000000000000033b .LASF23
     /tmp/ccv69WGL.s:4562   .debug_str:00000000000007cf .LASF22
     /tmp/ccv69WGL.s:4366   .debug_str:00000000000001fe .LASF24
     /tmp/ccv69WGL.s:4422   .debug_str:000000000000036d .LASF25
     /tmp/ccv69WGL.s:4656   .debug_str:0000000000000b37 .LASF26
     /tmp/ccv69WGL.s:4626   .debug_str:0000000000000a60 .LASF27
     /tmp/ccv69WGL.s:4622   .debug_str:0000000000000a30 .LASF29
     /tmp/ccv69WGL.s:4540   .debug_str:0000000000000746 .LASF31
     /tmp/ccv69WGL.s:4492   .debug_str:00000000000005c9 .LASF33
     /tmp/ccv69WGL.s:4522   .debug_str:000000000000069e .LASF28
     /tmp/ccv69WGL.s:4526   .debug_str:00000000000006c9 .LASF30
     /tmp/ccv69WGL.s:4488   .debug_str:00000000000005ae .LASF32
     /tmp/ccv69WGL.s:4440   .debug_str:0000000000000421 .LASF34
     /tmp/ccv69WGL.s:4658   .debug_str:0000000000000b51 .LASF35
     /tmp/ccv69WGL.s:4612   .debug_str:00000000000009cb .LASF36
     /tmp/ccv69WGL.s:4484   .debug_str:00000000000005a1 .LASF37
     /tmp/ccv69WGL.s:4490   .debug_str:00000000000005b5 .LASF38
     /tmp/ccv69WGL.s:4458   .debug_str:00000000000004c0 .LASF39
     /tmp/ccv69WGL.s:4528   .debug_str:00000000000006dc .LASF40
     /tmp/ccv69WGL.s:4694   .debug_str:0000000000000c82 .LASF41
     /tmp/ccv69WGL.s:4426   .debug_str:0000000000000380 .LASF42
     /tmp/ccv69WGL.s:4580   .debug_str:0000000000000913 .LASF43
     /tmp/ccv69WGL.s:4558   .debug_str:00000000000007b5 .LASF44
     /tmp/ccv69WGL.s:4560   .debug_str:00000000000007c8 .LASF45
     /tmp/ccv69WGL.s:4328   .debug_str:00000000000000e6 .LASF46
     /tmp/ccv69WGL.s:4354   .debug_str:00000000000001b0 .LASF47
     /tmp/ccv69WGL.s:4410   .debug_str:0000000000000320 .LASF48
     /tmp/ccv69WGL.s:4424   .debug_str:000000000000037a .LASF49
     /tmp/ccv69WGL.s:4348   .debug_str:0000000000000183 .LASF50
     /tmp/ccv69WGL.s:4308   .debug_str:0000000000000064 .LASF51
     /tmp/ccv69WGL.s:4548   .debug_str:000000000000076f .LASF52
     /tmp/ccv69WGL.s:4542   .debug_str:000000000000074f .LASF53
     /tmp/ccv69WGL.s:4682   .debug_str:0000000000000c00 .LASF54
     /tmp/ccv69WGL.s:4646   .debug_str:0000000000000ae1 .LASF55
     /tmp/ccv69WGL.s:4668   .debug_str:0000000000000b8e .LASF56
     /tmp/ccv69WGL.s:4642   .debug_str:0000000000000ad1 .LASF57
     /tmp/ccv69WGL.s:4470   .debug_str:000000000000052e .LASF58
GAS LISTING /tmp/ccv69WGL.s 			page 31


     /tmp/ccv69WGL.s:4344   .debug_str:000000000000016d .LASF59
     /tmp/ccv69WGL.s:4538   .debug_str:0000000000000734 .LASF60
     /tmp/ccv69WGL.s:4408   .debug_str:000000000000031a .LASF61
     /tmp/ccv69WGL.s:4340   .debug_str:0000000000000151 .LASF62
     /tmp/ccv69WGL.s:4568   .debug_str:0000000000000810 .LASF63
     /tmp/ccv69WGL.s:4550   .debug_str:0000000000000787 .LASF64
     /tmp/ccv69WGL.s:4546   .debug_str:0000000000000768 .LASF65
     /tmp/ccv69WGL.s:4318   .debug_str:00000000000000a6 .LASF66
     /tmp/ccv69WGL.s:4508   .debug_str:000000000000064f .LASF67
     /tmp/ccv69WGL.s:4434   .debug_str:00000000000003c7 .LASF68
     /tmp/ccv69WGL.s:4588   .debug_str:0000000000000932 .LASF136
     /tmp/ccv69WGL.s:4584   .debug_str:0000000000000926 .LASF70
     /tmp/ccv69WGL.s:4532   .debug_str:00000000000006fb .LASF72
     /tmp/ccv69WGL.s:4590   .debug_str:000000000000093a .LASF82
     /tmp/ccv69WGL.s:4692   .debug_str:0000000000000c6b .LASF84
     /tmp/ccv69WGL.s:4316   .debug_str:000000000000009a .LASF71
     /tmp/ccv69WGL.s:4454   .debug_str:000000000000049e .LASF73
     /tmp/ccv69WGL.s:4600   .debug_str:000000000000098a .LASF74
     /tmp/ccv69WGL.s:4302   .debug_str:0000000000000030 .LASF75
     /tmp/ccv69WGL.s:4494   .debug_str:00000000000005de .LASF190
     /tmp/ccv69WGL.s:4450   .debug_str:000000000000048f .LASF76
     /tmp/ccv69WGL.s:4352   .debug_str:00000000000001a0 .LASF77
     /tmp/ccv69WGL.s:4604   .debug_str:00000000000009ab .LASF78
     /tmp/ccv69WGL.s:4350   .debug_str:0000000000000195 .LASF79
     /tmp/ccv69WGL.s:4332   .debug_str:0000000000000117 .LASF80
     /tmp/ccv69WGL.s:4674   .debug_str:0000000000000bcd .LASF81
     /tmp/ccv69WGL.s:4636   .debug_str:0000000000000aa3 .LASF83
     /tmp/ccv69WGL.s:4430   .debug_str:000000000000039c .LASF85
     /tmp/ccv69WGL.s:4356   .debug_str:00000000000001b6 .LASF86
     /tmp/ccv69WGL.s:4334   .debug_str:0000000000000120 .LASF87
     /tmp/ccv69WGL.s:4678   .debug_str:0000000000000bec .LASF88
     /tmp/ccv69WGL.s:4566   .debug_str:00000000000007e8 .LASF89
     /tmp/ccv69WGL.s:4406   .debug_str:000000000000030f .LASF90
     /tmp/ccv69WGL.s:4536   .debug_str:000000000000071e .LASF91
     /tmp/ccv69WGL.s:4618   .debug_str:0000000000000a1e .LASF92
     /tmp/ccv69WGL.s:4602   .debug_str:000000000000099a .LASF191
     /tmp/ccv69WGL.s:4628   .debug_str:0000000000000a69 .LASF192
     /tmp/ccv69WGL.s:4370   .debug_str:0000000000000222 .LASF193
     /tmp/ccv69WGL.s:4296   .debug_str:0000000000000013 .LASF93
     /tmp/ccv69WGL.s:4680   .debug_str:0000000000000bfa .LASF94
     /tmp/ccv69WGL.s:4620   .debug_str:0000000000000a28 .LASF95
     /tmp/ccv69WGL.s:4570   .debug_str:0000000000000817 .LASF96
     /tmp/ccv69WGL.s:4552   .debug_str:000000000000079a .LASF194
     /tmp/ccv69WGL.s:4592   .debug_str:0000000000000945 .LASF97
     /tmp/ccv69WGL.s:4630   .debug_str:0000000000000a85 .LASF195
     /tmp/ccv69WGL.s:4376   .debug_str:0000000000000255 .LASF98
     /tmp/ccv69WGL.s:4486   .debug_str:00000000000005a9 .LASF99
     /tmp/ccv69WGL.s:4478   .debug_str:000000000000057a .LASF100
     /tmp/ccv69WGL.s:4384   .debug_str:0000000000000277 .LASF101
     /tmp/ccv69WGL.s:4662   .debug_str:0000000000000b67 .LASF102
     /tmp/ccv69WGL.s:4342   .debug_str:0000000000000163 .LASF196
     /tmp/ccv69WGL.s:4534   .debug_str:0000000000000707 .LASF197
     /tmp/ccv69WGL.s:4444   .debug_str:0000000000000465 .LASF103
     /tmp/ccv69WGL.s:4502   .debug_str:000000000000060c .LASF104
     /tmp/ccv69WGL.s:4460   .debug_str:00000000000004c8 .LASF105
     /tmp/ccv69WGL.s:4640   .debug_str:0000000000000ab5 .LASF106
     /tmp/ccv69WGL.s:4500   .debug_str:0000000000000600 .LASF107
GAS LISTING /tmp/ccv69WGL.s 			page 32


     /tmp/ccv69WGL.s:4330   .debug_str:00000000000000f9 .LASF108
     /tmp/ccv69WGL.s:4700   .debug_str:0000000000000ca1 .LASF109
     /tmp/ccv69WGL.s:4624   .debug_str:0000000000000a45 .LASF110
     /tmp/ccv69WGL.s:4564   .debug_str:00000000000007dd .LASF111
     /tmp/ccv69WGL.s:4672   .debug_str:0000000000000bb0 .LASF112
     /tmp/ccv69WGL.s:4514   .debug_str:000000000000067a .LASF113
     /tmp/ccv69WGL.s:4466   .debug_str:00000000000004e2 .LASF114
     /tmp/ccv69WGL.s:4428   .debug_str:0000000000000394 .LASF115
     /tmp/ccv69WGL.s:4358   .debug_str:00000000000001c3 .LASF116
     /tmp/ccv69WGL.s:4462   .debug_str:00000000000004d0 .LASF117
     /tmp/ccv69WGL.s:4594   .debug_str:000000000000094f .LASF118
     /tmp/ccv69WGL.s:4496   .debug_str:00000000000005e3 .LASF119
     /tmp/ccv69WGL.s:4360   .debug_str:00000000000001dd .LASF120
     /tmp/ccv69WGL.s:4464   .debug_str:00000000000004d5 .LASF121
     /tmp/ccv69WGL.s:4610   .debug_str:00000000000009c6 .LASF122
     /tmp/ccv69WGL.s:4480   .debug_str:000000000000057f .LASF123
     /tmp/ccv69WGL.s:4586   .debug_str:000000000000092b .LASF124
     /tmp/ccv69WGL.s:4574   .debug_str:0000000000000836 .LASF125
     /tmp/ccv69WGL.s:4686   .debug_str:0000000000000c26 .LASF126
     /tmp/ccv69WGL.s:4696   .debug_str:0000000000000c8a .LASF127
     /tmp/ccv69WGL.s:4298   .debug_str:0000000000000018 .LASF128
     /tmp/ccv69WGL.s:4374   .debug_str:0000000000000247 .LASF129
     /tmp/ccv69WGL.s:4518   .debug_str:000000000000068a .LASF130
     /tmp/ccv69WGL.s:4418   .debug_str:000000000000035a .LASF131
     /tmp/ccv69WGL.s:4372   .debug_str:0000000000000236 .LASF132
     /tmp/ccv69WGL.s:4300   .debug_str:0000000000000028 .LASF157
     /tmp/ccv69WGL.s:4294   .debug_str:0000000000000000 .LASF159
     /tmp/ccv69WGL.s:4684   .debug_str:0000000000000c18 .LASF133
     /tmp/ccv69WGL.s:4482   .debug_str:000000000000058f .LASF134
     /tmp/ccv69WGL.s:4498   .debug_str:00000000000005f0 .LASF135
     /tmp/ccv69WGL.s:4336   .debug_str:0000000000000138 .LASF137
     /tmp/ccv69WGL.s:4476   .debug_str:000000000000056f .LASF138
     /tmp/ccv69WGL.s:4416   .debug_str:0000000000000353 .LASF139
     /tmp/ccv69WGL.s:4324   .debug_str:00000000000000d8 .LASF140
     /tmp/ccv69WGL.s:4312   .debug_str:0000000000000090 .LASF141
     /tmp/ccv69WGL.s:4314   .debug_str:0000000000000095 .LASF142
     /tmp/ccv69WGL.s:4614   .debug_str:00000000000009df .LASF143
     /tmp/ccv69WGL.s:4472   .debug_str:0000000000000544 .LASF144
     /tmp/ccv69WGL.s:4310   .debug_str:000000000000006f .LASF145
     /tmp/ccv69WGL.s:4412   .debug_str:0000000000000332 .LASF146
     /tmp/ccv69WGL.s:4474   .debug_str:000000000000054e .LASF147
     /tmp/ccv69WGL.s:4390   .debug_str:00000000000002a0 .LASF148
     /tmp/ccv69WGL.s:4436   .debug_str:00000000000003e9 .LASF149
     /tmp/ccv69WGL.s:4510   .debug_str:0000000000000664 .LASF150
     /tmp/ccv69WGL.s:4632   .debug_str:0000000000000a8a .LASF151
     /tmp/ccv69WGL.s:4688   .debug_str:0000000000000c33 .LASF152
     /tmp/ccv69WGL.s:4654   .debug_str:0000000000000b2c .LASF153
     /tmp/ccv69WGL.s:4524   .debug_str:00000000000006a5 .LASF154
     /tmp/ccv69WGL.s:4650   .debug_str:0000000000000af1 .LASF155
     /tmp/ccv69WGL.s:4690   .debug_str:0000000000000c3b .LASF156
     /tmp/ccv69WGL.s:4402   .debug_str:00000000000002f7 .LASF158
     /tmp/ccv69WGL.s:4468   .debug_str:00000000000004fc .LASF160
     /tmp/ccv69WGL.s:4456   .debug_str:00000000000004b5 .LASF161
     /tmp/ccv69WGL.s:4652   .debug_str:0000000000000afc .LASF162
     /tmp/ccv69WGL.s:4396   .debug_str:00000000000002d3 .LASF163
     /tmp/ccv69WGL.s:4598   .debug_str:000000000000095f .LASF164
     /tmp/ccv69WGL.s:4676   .debug_str:0000000000000be0 .LASF198
GAS LISTING /tmp/ccv69WGL.s 			page 33


     /tmp/ccv69WGL.s:4442   .debug_str:0000000000000434 .LASF199
     /tmp/ccv69WGL.s:4388   .debug_str:000000000000029a .LASF165
     /tmp/ccv69WGL.s:4398   .debug_str:00000000000002d9 .LASF200
     /tmp/ccv69WGL.s:4698   .debug_str:0000000000000c97 .LASF166
     /tmp/ccv69WGL.s:4382   .debug_str:000000000000026e .LASF167
     /tmp/ccv69WGL.s:4606   .debug_str:00000000000009b3 .LASF168
     /tmp/ccv69WGL.s:4520   .debug_str:0000000000000692 .LASF169
     /tmp/ccv69WGL.s:4346   .debug_str:0000000000000173 .LASF170
     /tmp/ccv69WGL.s:4326   .debug_str:00000000000000dd .LASF171
     /tmp/ccv69WGL.s:4304   .debug_str:0000000000000053 .LASF172
     /tmp/ccv69WGL.s:4556   .debug_str:00000000000007ac .LASF173
     /tmp/ccv69WGL.s:4596   .debug_str:0000000000000954 .LASF174
     /tmp/ccv69WGL.s:783    .text:0000000000000300 .LFE41
     /tmp/ccv69WGL.s:4576   .debug_str:0000000000000848 .LASF175
     /tmp/ccv69WGL.s:3827   .debug_loc:0000000000000000 .LLST0
     /tmp/ccv69WGL.s:4608   .debug_str:00000000000009c1 .LASF176
     /tmp/ccv69WGL.s:3848   .debug_loc:000000000000005e .LLST1
     /tmp/ccv69WGL.s:4278   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccv69WGL.s:4364   .debug_str:00000000000001f9 .LASF177
     /tmp/ccv69WGL.s:3945   .debug_loc:00000000000001e9 .LLST5
     /tmp/ccv69WGL.s:3952   .debug_loc:000000000000020c .LLST6
     /tmp/ccv69WGL.s:3963   .debug_loc:0000000000000242 .LLST7
     /tmp/ccv69WGL.s:4018   .debug_loc:0000000000000349 .LLST8
     /tmp/ccv69WGL.s:328    .text:0000000000000148 .LBB59
     /tmp/ccv69WGL.s:365    .text:0000000000000168 .LBE59
     /tmp/ccv69WGL.s:4073   .debug_loc:0000000000000450 .LLST9
     /tmp/ccv69WGL.s:346    .text:000000000000015c .LBB60
     /tmp/ccv69WGL.s:357    .text:0000000000000160 .LBE60
     /tmp/ccv69WGL.s:4080   .debug_loc:0000000000000473 .LLST10
     /tmp/ccv69WGL.s:334    .text:0000000000000154 .LVL21
     /tmp/ccv69WGL.s:368    .text:0000000000000168 .LBB62
     /tmp/ccv69WGL.s:405    .text:0000000000000188 .LBE62
     /tmp/ccv69WGL.s:4087   .debug_loc:0000000000000496 .LLST11
     /tmp/ccv69WGL.s:386    .text:000000000000017c .LBB63
     /tmp/ccv69WGL.s:397    .text:0000000000000180 .LBE63
     /tmp/ccv69WGL.s:4094   .debug_loc:00000000000004b9 .LLST12
     /tmp/ccv69WGL.s:374    .text:0000000000000174 .LVL27
     /tmp/ccv69WGL.s:408    .text:0000000000000188 .LBB65
     /tmp/ccv69WGL.s:458    .text:00000000000001b8 .LBE65
     /tmp/ccv69WGL.s:4666   .debug_str:0000000000000b87 .LASF178
     /tmp/ccv69WGL.s:4101   .debug_loc:00000000000004dc .LLST13
     /tmp/ccv69WGL.s:4446   .debug_str:000000000000046e .LASF179
     /tmp/ccv69WGL.s:4108   .debug_loc:00000000000004ff .LLST14
     /tmp/ccv69WGL.s:4115   .debug_loc:0000000000000522 .LLST15
     /tmp/ccv69WGL.s:4122   .debug_loc:0000000000000545 .LLST16
     /tmp/ccv69WGL.s:435    .text:00000000000001a4 .LBB66
     /tmp/ccv69WGL.s:446    .text:00000000000001a8 .LBE66
     /tmp/ccv69WGL.s:4129   .debug_loc:0000000000000568 .LLST17
     /tmp/ccv69WGL.s:415    .text:0000000000000190 .LVL32
     /tmp/ccv69WGL.s:4136   .debug_loc:000000000000058b .LLST19
     /tmp/ccv69WGL.s:4147   .debug_loc:00000000000005c1 .LLST20
     /tmp/ccv69WGL.s:4158   .debug_loc:00000000000005f7 .LLST21
     /tmp/ccv69WGL.s:536    .text:000000000000021c .LBB71
     /tmp/ccv69WGL.s:547    .text:0000000000000220 .LBE71
     /tmp/ccv69WGL.s:4165   .debug_loc:000000000000061a .LLST22
     /tmp/ccv69WGL.s:508    .text:00000000000001f8 .LVL45
     /tmp/ccv69WGL.s:514    .text:0000000000000208 .LVL46
GAS LISTING /tmp/ccv69WGL.s 			page 34


     /tmp/ccv69WGL.s:771    .text:00000000000002f4 .LVL84
     /tmp/ccv69WGL.s:562    .text:0000000000000230 .LBB73
     /tmp/ccv69WGL.s:610    .text:0000000000000264 .LBE73
     /tmp/ccv69WGL.s:4172   .debug_loc:000000000000063d .LLST23
     /tmp/ccv69WGL.s:579    .text:000000000000023c .LBB74
     /tmp/ccv69WGL.s:590    .text:0000000000000240 .LBE74
     /tmp/ccv69WGL.s:4179   .debug_loc:0000000000000660 .LLST24
     /tmp/ccv69WGL.s:602    .text:0000000000000254 .LVL57
     /tmp/ccv69WGL.s:606    .text:0000000000000260 .LVL58
     /tmp/ccv69WGL.s:613    .text:0000000000000264 .LBB76
     /tmp/ccv69WGL.s:659    .text:0000000000000290 .LBE76
     /tmp/ccv69WGL.s:4186   .debug_loc:0000000000000683 .LLST25
     /tmp/ccv69WGL.s:4193   .debug_loc:00000000000006a6 .LLST26
     /tmp/ccv69WGL.s:632    .text:0000000000000274 .LBB77
     /tmp/ccv69WGL.s:643    .text:0000000000000278 .LBE77
     /tmp/ccv69WGL.s:4200   .debug_loc:00000000000006c9 .LLST27
     /tmp/ccv69WGL.s:655    .text:000000000000028c .LVL66
     /tmp/ccv69WGL.s:662    .text:0000000000000290 .LBB79
     /tmp/ccv69WGL.s:708    .text:00000000000002bc .LBE79
     /tmp/ccv69WGL.s:4207   .debug_loc:00000000000006ec .LLST28
     /tmp/ccv69WGL.s:4214   .debug_loc:000000000000070f .LLST29
     /tmp/ccv69WGL.s:681    .text:00000000000002a0 .LBB80
     /tmp/ccv69WGL.s:692    .text:00000000000002a4 .LBE80
     /tmp/ccv69WGL.s:4221   .debug_loc:0000000000000732 .LLST30
     /tmp/ccv69WGL.s:704    .text:00000000000002b8 .LVL74
     /tmp/ccv69WGL.s:474    .text:00000000000001c8 .LBB68
     /tmp/ccv69WGL.s:484    .text:00000000000001d8 .LBE68
     /tmp/ccv69WGL.s:4228   .debug_loc:0000000000000755 .LLST18
     /tmp/ccv69WGL.s:715    .text:00000000000002c0 .LBB84
     /tmp/ccv69WGL.s:726    .text:00000000000002c4 .LBE84
     /tmp/ccv69WGL.s:4236   .debug_loc:0000000000000779 .LLST31
     /tmp/ccv69WGL.s:464    .text:00000000000001c0 .LVL38
     /tmp/ccv69WGL.s:488    .text:00000000000001e0 .LVL41
     /tmp/ccv69WGL.s:136    .text:0000000000000074 .LBB49
     /tmp/ccv69WGL.s:212    .text:00000000000000f0 .LBE49
     /tmp/ccv69WGL.s:4648   .debug_str:0000000000000aeb .LASF180
     /tmp/ccv69WGL.s:4243   .debug_loc:000000000000079c .LLST2
     /tmp/ccv69WGL.s:138    .text:0000000000000074 .LBB50
     /tmp/ccv69WGL.s:154    .text:0000000000000080 .LBE50
     /tmp/ccv69WGL.s:195    .text:00000000000000e8 .LBB52
     /tmp/ccv69WGL.s:206    .text:00000000000000ec .LBE52
     /tmp/ccv69WGL.s:4250   .debug_loc:00000000000007bf .LLST3
     /tmp/ccv69WGL.s:160    .text:0000000000000090 .LVL3
     /tmp/ccv69WGL.s:165    .text:000000000000009c .LVL4
     /tmp/ccv69WGL.s:170    .text:00000000000000ac .LVL5
     /tmp/ccv69WGL.s:175    .text:00000000000000b8 .LVL6
     /tmp/ccv69WGL.s:180    .text:00000000000000c8 .LVL7
     /tmp/ccv69WGL.s:185    .text:00000000000000d4 .LVL8
     /tmp/ccv69WGL.s:190    .text:00000000000000e4 .LVL9
     /tmp/ccv69WGL.s:85     .text:0000000000000040 .LBB43
     /tmp/ccv69WGL.s:102    .text:000000000000004c .LBE43
     /tmp/ccv69WGL.s:104    .text:000000000000004c .LBB45
     /tmp/ccv69WGL.s:120    .text:0000000000000058 .LBE45
     /tmp/ccv69WGL.s:737    .text:00000000000002cc .LBB54
     /tmp/ccv69WGL.s:749    .text:00000000000002d4 .LBE54
     /tmp/ccv69WGL.s:4257   .debug_loc:00000000000007e2 .LLST4
     /tmp/ccv69WGL.s:753    .text:00000000000002dc .LVL81
GAS LISTING /tmp/ccv69WGL.s 			page 35


     /tmp/ccv69WGL.s:775    .text:0000000000000300 .LVL85
     /tmp/ccv69WGL.s:13     .text:0000000000000000 .LFB40
     /tmp/ccv69WGL.s:43     .text:0000000000000020 .LFE40
     /tmp/ccv69WGL.s:4380   .debug_str:0000000000000269 .LASF201
     /tmp/ccv69WGL.s:4638   .debug_str:0000000000000ab0 .LASF181
     /tmp/ccv69WGL.s:4506   .debug_str:000000000000063c .LASF182
     /tmp/ccv69WGL.s:4670   .debug_str:0000000000000ba4 .LASF184
     /tmp/ccv69WGL.s:4400   .debug_str:00000000000002e5 .LASF183
     /tmp/ccv69WGL.s:4512   .debug_str:000000000000066d .LASF185
     /tmp/ccv69WGL.s:4634   .debug_str:0000000000000a94 .LASF202
     /tmp/ccv69WGL.s:4392   .debug_str:00000000000002ad .LASF203
     /tmp/ccv69WGL.s:100    .text:000000000000004c .LVL0
     /tmp/ccv69WGL.s:210    .text:00000000000000f0 .LVL12
     /tmp/ccv69WGL.s:233    .text:0000000000000110 .LVL13
     /tmp/ccv69WGL.s:251    .text:0000000000000118 .LVL15
     /tmp/ccv69WGL.s:269    .text:0000000000000124 .LVL18
     /tmp/ccv69WGL.s:732    .text:00000000000002cc .LVL79
     /tmp/ccv69WGL.s:759    .text:00000000000002e4 .LVL82
     /tmp/ccv69WGL.s:118    .text:0000000000000058 .LVL1
     /tmp/ccv69WGL.s:194    .text:00000000000000e8 .LVL10
     /tmp/ccv69WGL.s:345    .text:000000000000015c .LVL22
     /tmp/ccv69WGL.s:363    .text:0000000000000168 .LVL25
     /tmp/ccv69WGL.s:385    .text:000000000000017c .LVL28
     /tmp/ccv69WGL.s:403    .text:0000000000000188 .LVL31
     /tmp/ccv69WGL.s:434    .text:00000000000001a4 .LVL34
     /tmp/ccv69WGL.s:451    .text:00000000000001b0 .LVL36
     /tmp/ccv69WGL.s:535    .text:000000000000021c .LVL48
     /tmp/ccv69WGL.s:552    .text:0000000000000228 .LVL50
     /tmp/ccv69WGL.s:578    .text:000000000000023c .LVL53
     /tmp/ccv69WGL.s:595    .text:0000000000000248 .LVL55
     /tmp/ccv69WGL.s:631    .text:0000000000000274 .LVL61
     /tmp/ccv69WGL.s:649    .text:0000000000000280 .LVL64
     /tmp/ccv69WGL.s:680    .text:00000000000002a0 .LVL69
     /tmp/ccv69WGL.s:698    .text:00000000000002ac .LVL72
     /tmp/ccv69WGL.s:714    .text:00000000000002c0 .LVL76
     /tmp/ccv69WGL.s:762    .text:00000000000002e8 .LVL83
     /tmp/ccv69WGL.s:245    .text:0000000000000114 .LVL14
     /tmp/ccv69WGL.s:275    .text:0000000000000130 .LVL19
     /tmp/ccv69WGL.s:257    .text:000000000000011c .LVL16
     /tmp/ccv69WGL.s:332    .text:000000000000014c .LVL20
     /tmp/ccv69WGL.s:372    .text:000000000000016c .LVL26
     /tmp/ccv69WGL.s:456    .text:00000000000001b8 .LVL37
     /tmp/ccv69WGL.s:469    .text:00000000000001c8 .LVL39
     /tmp/ccv69WGL.s:493    .text:00000000000001e8 .LVL42
     /tmp/ccv69WGL.s:506    .text:00000000000001f0 .LVL44
     /tmp/ccv69WGL.s:557    .text:0000000000000230 .LVL51
     /tmp/ccv69WGL.s:566    .text:0000000000000234 .LVL52
     /tmp/ccv69WGL.s:600    .text:000000000000024c .LVL56
     /tmp/ccv69WGL.s:608    .text:0000000000000264 .LVL59
     /tmp/ccv69WGL.s:619    .text:000000000000026c .LVL60
     /tmp/ccv69WGL.s:653    .text:0000000000000284 .LVL65
     /tmp/ccv69WGL.s:657    .text:0000000000000290 .LVL67
     /tmp/ccv69WGL.s:668    .text:0000000000000298 .LVL68
     /tmp/ccv69WGL.s:702    .text:00000000000002b0 .LVL73
     /tmp/ccv69WGL.s:706    .text:00000000000002bc .LVL75
     /tmp/ccv69WGL.s:730    .text:00000000000002c8 .LVL78
     /tmp/ccv69WGL.s:263    .text:0000000000000120 .LVL17
GAS LISTING /tmp/ccv69WGL.s 			page 36


     /tmp/ccv69WGL.s:361    .text:0000000000000164 .LVL24
     /tmp/ccv69WGL.s:354    .text:0000000000000160 .LVL23
     /tmp/ccv69WGL.s:401    .text:0000000000000184 .LVL30
     /tmp/ccv69WGL.s:394    .text:0000000000000180 .LVL29
     /tmp/ccv69WGL.s:423    .text:000000000000019c .LVL33
     /tmp/ccv69WGL.s:443    .text:00000000000001a8 .LVL35
     /tmp/ccv69WGL.s:502    .text:00000000000001ec .LVL43
     /tmp/ccv69WGL.s:524    .text:0000000000000214 .LVL47
     /tmp/ccv69WGL.s:544    .text:0000000000000220 .LVL49
     /tmp/ccv69WGL.s:587    .text:0000000000000240 .LVL54
     /tmp/ccv69WGL.s:647    .text:000000000000027c .LVL63
     /tmp/ccv69WGL.s:640    .text:0000000000000278 .LVL62
     /tmp/ccv69WGL.s:696    .text:00000000000002a8 .LVL71
     /tmp/ccv69WGL.s:689    .text:00000000000002a4 .LVL70
     /tmp/ccv69WGL.s:482    .text:00000000000001d8 .LVL40
     /tmp/ccv69WGL.s:723    .text:00000000000002c4 .LVL77
     /tmp/ccv69WGL.s:152    .text:0000000000000080 .LVL2
     /tmp/ccv69WGL.s:203    .text:00000000000000ec .LVL11
     /tmp/ccv69WGL.s:746    .text:00000000000002d4 .LVL80
     /tmp/ccv69WGL.s:817    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccv69WGL.s:237    .text:0000000000000110 .LBB56
     /tmp/ccv69WGL.s:734    .text:00000000000002cc .LBE56
     /tmp/ccv69WGL.s:764    .text:00000000000002e8 .LBB88
     /tmp/ccv69WGL.s:780    .text:0000000000000300 .LBE88
     /tmp/ccv69WGL.s:497    .text:00000000000001e8 .LBB70
     /tmp/ccv69WGL.s:559    .text:0000000000000230 .LBE70
     /tmp/ccv69WGL.s:767    .text:00000000000002e8 .LBB82
     /tmp/ccv69WGL.s:777    .text:0000000000000300 .LBE82
     /tmp/ccv69WGL.s:786    .gcc_except_table:0000000000000000 .LLSDA41

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z12printIntegerm
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3CCB15createCoroutineEPFvPvES0_
_ZN3CCB8dispatchEv
_ZN3CCB7runningE
_ZN4_semnwEm
_ZN4_semC1Ej
_ZN4_semD1Ev
_ZN4_semdlEPv
_ZN4_sem4waitEv
_ZN4_sem6signalEv
_Unwind_Resume
__gxx_personality_v0
